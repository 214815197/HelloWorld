{"version":3,"sources":["Util/IHashTable.ts","Core/_View/IState.ts","Core/_View/IProps.ts","Core/_View/IView.ts","Core/_Ev/IEventMetas.ts","Core/_Ev/IEvent.ts","Core/_Ev/IEventListener.ts","Core/_Ev/IEmittable.ts","Core/_Runtime/IFlow.ts","Util/IArrayIterator.ts","Util/IObjectIterator.ts","Util/_iterator.ts","Runtime/Flow.ts","View/View.ts","Util/Path.ts","View/_Steps/NodeChoice.tsx","View/_Steps/ConfigDB.tsx","View/_Steps/RegisteInfo.tsx","View/_Steps/ConfigUser.tsx","View/_Steps/Finish.tsx","View/Stage.tsx","Core/_Runtime/IStageFlow.ts","Core/_Runtime/IStepFlow.ts","Core/_Runtime/INodeChoiceFlow.ts","Runtime/_Steps/NodeChoiceFlow.ts","Core/_Runtime/IConfigDBFlow.ts","Runtime/_Steps/ConfigDBFlow.ts","Core/_Runtime/IRegisteInfoFlow.ts","Runtime/_Steps/RegisteInfoFlow.ts","Core/_Runtime/IConfigUserFlow.ts","Runtime/_Steps/ConfigUserFlow.ts","Core/_Runtime/IFinishFlow.ts","Runtime/_Steps/FinishFlow.ts","Runtime/StageFlow.tsx","Runtime/Runtime.ts","Wizard.ts"],"names":[],"mappings":";;;;;AAAA;;;;;;GAMG;ACNH;;;;;GAKG;AAEH,AAEA,iDAFiD;ACPjD;;;;;GAKG;AAEH,AAGA,iDAHiD;AACjD,6CAA6C;ACR7C;;;;;GAKG;AAEH,AAMA,iDANiD;AACjD,iEAAiE;AACjE,kCAAkC;AAClC,kCAAkC;AAClC,6CAA6C;ACX7C;;;;;;;GAOG;ACPH;;;;;;;GAOG;AAEH,AAEA,uCAFuC;ACTvC;;;;;;;GAOG;AAEH,AAEA,kCAFkC;ACTlC;;;;;;;GAOG;AAEH,AAEA,0CAF0C;ACT1C;;;;;GAKG;AAEH,AAGA,0CAH0C;AAC1C,6CAA6C;ACR7C;;;;;;GAMG;ACNH;;;;;;GAMG;AAEH,AAEA,sCAFsC;ACRtC;;;;;;GAMG;AAEH,0CAA0C;AAC1C,2CAA2C;AAE3C,IAAU,IAAI,CAmGb;AAnGD,WAAU,IAAI,EAAC,CAAC;IAMZ,cAAwB,GAAQ,EAAE,EAAO,EAAE,KAAU;QACjD,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QACpB,IAAI,EAAO,CAAC;QACZ,EAAE,CAAC,CAAC,GAAG,YAAY,KAAK,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC;gBACZ,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YAClC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,EAAE;gBAC9B,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;YACrC,MAAM,CAAC;QACX,CAAC;QACD,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC;YACX,EAAE,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;gBACvB,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IAC7C,CAAC;IAbe,SAAI,OAanB,CAAA;IAOD,eAAyB,GAAQ,EAAE,EAAO,EAAE,KAAU;QAClD,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QACpB,IAAI,EAAO,CAAC;QACZ,EAAE,CAAC,CAAC,GAAG,YAAY,KAAK,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;gBACV,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YAChC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,EAAE;gBAC9B,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;oBAClC,MAAM,CAAC,KAAK,CAAC;QACzB,CAAC;QAAC,IAAI;YACF,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC;gBACX,EAAE,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;oBAC5D,MAAM,CAAC,KAAK,CAAC;QACzB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAde,UAAK,QAcpB,CAAA;IAOD,cAAwB,GAAQ,EAAE,EAAO,EAAE,KAAU;QACjD,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QACpB,IAAI,EAAO,CAAC;QACZ,EAAE,CAAC,CAAC,GAAG,YAAY,KAAK,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;gBACT,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YAC/B,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,EAAE;gBAC9B,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;oBACjC,MAAM,CAAC,IAAI,CAAC;QACxB,CAAC;QAAC,IAAI;YACF,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC;gBACX,EAAE,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;oBAC3D,MAAM,CAAC,IAAI,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAde,SAAI,OAcnB,CAAA;IAOD,iBAA2B,GAAQ,EAAE,IAAO,EAAE,MAAkB;QAAlB,sBAAkB,GAAlB,UAAkB;QAC5D,IAAI,EAAO,CAAC;QACZ,EAAE,CAAC,CAAC,GAAG,YAAY,KAAK,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC;gBACZ,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YACrC,GAAG,CAAC,CAAC,EAAE,GAAG,MAAM,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,EAAE;gBACnC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC;oBAChB,MAAM,CAAC,EAAE,CAAC;QACtB,CAAC;QAAC,IAAI;YACF,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC;gBACX,EAAE,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC;oBAC1C,MAAM,CAAC,EAAE,CAAC;QACtB,MAAM,CAAC,CAAC,CAAC,CAAC;IACd,CAAC;IAbe,YAAO,UAatB,CAAA;IAOD,eAAsB,IAAS;QAC3B,EAAE,CAAC,CAAC,QAAQ,IAAI,OAAO,IAAI,CAAC;YACxB,MAAM,CAAC,IAAI,CAAC;QAChB,EAAE,CAAC,CAAC,IAAI,YAAY,KAAK,CAAC;YACtB,MAAM,CAAU,IAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,KAAK,GAAoB,EAAE,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,UAAC,KAAU,EAAE,GAAW;YACpC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAVe,UAAK,QAUpB,CAAA;AACL,CAAC,EAnGS,IAAI,KAAJ,IAAI,QAmGb;AC9GD;;;;;GAKG;AAEH,kDAAkD;AAClD,6CAA6C;AAE7C,IAAU,OAAO,CAkEhB;AAlED,WAAU,OAAO,EAAC,CAAC;IACf;QAWI;;WAEG;QACH;YACI,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACxB,CAAC;QAED;;WAEG;QACI,oBAAK,GAAZ;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;QAED;;WAEG;QACI,oBAAK,GAAZ,UAAa,IAAgB;YACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED;;WAEG;QACI,+BAAgB,GAAvB,UAA8C,IAAY,EAAE,QAAgC;YACxF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAClD,IAAI,GAAG,GAAW,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC;YAC/D,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;gBACV,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxC,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED;;WAEG;QACI,kCAAmB,GAA1B,UAAiD,IAAY,EAAE,QAAgC;YAC3F,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAClD,IAAI,GAAG,GAAW,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC;YAC/D,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;gBACV,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED;;WAEG;QACI,4BAAa,GAApB,UAA2C,KAAqB;YAC5D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,EAAE,UAAC,QAAgC;gBAC5E,QAAQ,CAAC,KAAK,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACL,WAAC;IAAD,CAhEA,AAgEC,IAAA;IAhEY,YAAI,OAgEhB,CAAA;AACL,CAAC,EAlES,OAAO,KAAP,OAAO,QAkEhB;AC5ED;;;;;GAKG;AAEH,+CAA+C;AAC/C,+CAA+C;AAE/C,IAAU,IAAI,CAGb;AAHD,WAAU,MAAI,EAAC,CAAC;IACZ;QAAwE,wBAAqB;QAA7F;YAAwE,8BAAqB;QAC7F,CAAC;QAAD,WAAC;IAAD,CADA,AACC,CADuE,KAAK,CAAC,SAAS,GACtF;IADY,WAAI,OAChB,CAAA;AACL,CAAC,EAHS,IAAI,KAAJ,IAAI,QAGb;ACbD;;;;;;GAMG;AAEH,IAAU,IAAI,CAYb;AAZD,WAAU,IAAI,EAAC,CAAC;IACZ,IAAiB,IAAI,CAUpB;IAVD,WAAiB,IAAI,EAAC,CAAC;QACnB;;WAEG;QACH;YACI,IAAI,MAAM,GAAW,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC5C,IAAI,QAAQ,GAAW,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAChD,IAAI,IAAI,GAAW,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,CAAC,MAAM,GAAG,IAAI,CAAE;QAC1B,CAAC;QALe,YAAO,UAKtB,CAAA;IACL,CAAC,EAVgB,IAAI,GAAJ,SAAI,KAAJ,SAAI,QAUpB;AACL,CAAC,EAZS,IAAI,KAAJ,IAAI,QAYb;ACpBD;;;;;GAKG;AAEH,mCAAmC;AACnC,2CAA2C;AAC3C,IAAU,IAAI,CAsCb;AAtCD,WAAU,IAAI,EAAC,CAAC;IACZ;QAAgC,8BAA8B;QAE1D,oBAAY,KAAkB;YAC1B,kBAAM,KAAK,CAAC,CAAC;YAFT,WAAM,GAAW,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAGzC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC;QAEM,2BAAM,GAAb;YAAA,iBAqBC;YApBG,MAAM,CAAC,qBAAC,GAAG,IAAC,SAAS,EAAC,MAAM,GACxB,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,gBAAiB,EACvC,qBAAC,GAAG,IAAC,SAAS,EAAC,MAAM,qBAAsB,EAC3C,qBAAC,GAAG,IAAC,SAAS,EAAC,UAAU,GACrB,qBAAC,GAAG,IAAC,SAAS,EAAC,UAAU,GACrB,qBAAC,IAAI,IAAC,SAAS,EAAC,aAAa,GACzB,qBAAC,IAAI,IAAC,SAAS,EAAE,cAAc,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,QAAQ,GAAG,WAAW,GAAG,EAAE,CAAE,EAAC,OAAO,EAAE,UAAC,GAAqB,IAAM,KAAI,CAAC,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAA,CAAE,GAAC,qBAAC,GAAG,IAAC,GAAG,EAAE,IAAI,CAAC,MAAM,GAAG,mBAAoB,EAAE,CAAO,CACnN,EACP,qBAAC,IAAI,IAAC,SAAS,EAAC,sBAAsB,YAAc,EACpD,qBAAC,IAAI,IAAC,SAAS,EAAC,kBAAkB,6CAA+C,CAC/E,EACN,qBAAC,GAAG,IAAC,SAAS,EAAC,UAAU,GACrB,qBAAC,IAAI,IAAC,SAAS,EAAC,aAAa,GACzB,qBAAC,IAAI,IAAC,SAAS,EAAE,cAAc,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,QAAQ,GAAG,WAAW,GAAG,EAAE,CAAE,EAAC,OAAO,EAAE,UAAC,GAAqB,IAAM,KAAI,CAAC,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAA,CAAE,GAAC,qBAAC,GAAG,IAAC,GAAG,EAAE,IAAI,CAAC,MAAM,GAAG,mBAAoB,EAAE,CAAO,CACnN,EACP,qBAAC,IAAI,IAAC,SAAS,EAAC,sBAAsB,YAAc,EACpD,qBAAC,IAAI,IAAC,SAAS,EAAC,kBAAkB,yCAA2C,CAC3E,CACJ,CACJ,CAAC;QACX,CAAC;QAEO,2BAAM,GAAd,UAAe,EAAoB,EAAE,IAAY;YAC7C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;gBAAC,MAAM,CAAE;YAClB,IAAI,CAAC,KAAK,CAAC,IAA6B,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC3D,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,oBAAoB;QACxB,CAAC;QACL,iBAAC;IAAD,CApCA,AAoCC,CApC+B,SAAI,GAoCnC;IApCY,eAAU,aAoCtB,CAAA;AACL,CAAC,EAtCS,IAAI,KAAJ,IAAI,QAsCb;AC/CD;;;;;GAKG;AAEH,mCAAmC;AACnC,IAAU,IAAI,CAuDb;AAvDD,WAAU,IAAI,EAAC,CAAC;IACZ;QAA8B,4BAA8B;QAUxD,kBAAY,KAAkB;YAVlC,iBAqDC;YA1CO,kBAAM,KAAK,CAAC,CAAC;YAVT,cAAS,GAAyB;gBACtC,QAAQ,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,+CAA+C,EAAE;gBAClF,YAAY,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,sIAAsI,EAAE;gBAC7K,KAAK,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,wCAAwC,EAAE;gBACxE,OAAO,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,2FAA2F,EAAE;gBAC7H,SAAS,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,8EAA8E,EAAE;aACrH,CAAC;YAEM,cAAS,GAAkB,EAAE,CAAC;YAGlC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAC,IAA6B,EAAE,MAAc;gBACpE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,qBAAC,MAAM,IAAC,KAAK,EAAE,MAAO,GAAE,MAAO,CAAS,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,yBAAM,GAAb;YACI,MAAM,CAAC,qBAAC,GAAG,IAAC,SAAS,EAAC,MAAM,GACxB,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,iBAAkB,EACxC,qBAAC,GAAG,IAAC,SAAS,EAAC,MAAM,iCAAkC,EACvD,qBAAC,GAAG,IAAC,SAAS,EAAC,UAAU,GACrB,qBAAC,GAAG,IAAC,SAAS,EAAC,KAAK,GAChB,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,SAAU,EAChC,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,GAClB,qBAAC,MAAM,IAAC,SAAS,EAAC,YAAY,GAC1B,qBAAC,MAAM,IAAC,KAAK,EAAC,IAAI,YAAgB,EACjC,IAAI,CAAC,SAAU,CACX,CACP,CACJ,EACN,qBAAC,GAAG,IAAC,SAAS,EAAC,KAAK,GAChB,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,WAAY,EAClC,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,GAClB,qBAAC,KAAK,IAAC,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,cAAc,EAAG,CAC5C,CACJ,EACN,qBAAC,GAAG,IAAC,SAAS,EAAC,KAAK,GAChB,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,SAAU,EAChC,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,GAClB,qBAAC,KAAK,IAAC,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,aAAa,EAAG,CAC3C,CACJ,EACN,qBAAC,GAAG,IAAC,SAAS,EAAC,KAAK,GAChB,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,QAAS,EAC/B,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,GAClB,qBAAC,KAAK,IAAC,IAAI,EAAC,UAAU,EAAC,SAAS,EAAC,YAAY,EAAG,CAC9C,CACJ,CACJ,CACJ,CAAC;QACX,CAAC;QACL,eAAC;IAAD,CArDA,AAqDC,CArD6B,SAAI,GAqDjC;IArDY,aAAQ,WAqDpB,CAAA;AACL,CAAC,EAvDS,IAAI,KAAJ,IAAI,QAuDb;AC/DD;;;;;GAKG;AAEH,mCAAmC;AACnC,IAAU,IAAI,CAgCb;AAhCD,WAAU,IAAI,EAAC,CAAC;IACZ;QAAiC,+BAA8B;QAC3D,qBAAY,KAAkB;YAC1B,kBAAM,KAAK,CAAC,CAAC;YACb,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC;QAEM,4BAAM,GAAb;YACI,MAAM,CAAC,qBAAC,GAAG,IAAC,SAAS,EAAC,MAAM,GACxB,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,gBAAiB,EAEnC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,QAAQ;gBAC9B,qBAAC,GAAG,IAAC,SAAS,EAAC,MAAM,gCAAiC;gBACtD,qBAAC,GAAG,IAAC,SAAS,EAAC,MAAM,mBACxB,EACD,qBAAC,GAAG,IAAC,SAAS,EAAC,UAAU,GAEjB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,QAAQ;gBACrC,qBAAC,GAAG,IAAC,SAAS,EAAC,KAAK,GAChB,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,gCAAiC,CACrD;gBACN,qBAAC,GAAG,IAAC,SAAS,EAAC,KAAK,GAChB,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,cAAe,EACrC,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,GAClB,qBAAC,KAAK,IAAC,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,UAAU,EAAG,CACxC,CAEb,CACC,CACJ,CAAC;QACX,CAAC;QACL,kBAAC;IAAD,CA9BA,AA8BC,CA9BgC,SAAI,GA8BpC;IA9BY,gBAAW,cA8BvB,CAAA;AACL,CAAC,EAhCS,IAAI,KAAJ,IAAI,QAgCb;ACxCD;;;;;GAKG;AAEH,mCAAmC;AACnC,IAAU,IAAI,CA4Bb;AA5BD,WAAU,IAAI,EAAC,CAAC;IACZ;QAAgC,8BAA8B;QAC1D,oBAAY,KAAkB;YAC1B,kBAAM,KAAK,CAAC,CAAC;YACb,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC;QAEM,2BAAM,GAAb;YACI,MAAM,CAAC,qBAAC,GAAG,IAAC,SAAS,EAAC,MAAM,GACxB,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,gBAAiB,EACvC,qBAAC,GAAG,IAAC,SAAS,EAAC,MAAM,kBAAmB,EACxC,qBAAC,GAAG,IAAC,SAAS,EAAC,UAAU,GACrB,qBAAC,GAAG,IAAC,SAAS,EAAC,KAAK,GAChB,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,SAAU,EAChC,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,GAClB,qBAAC,KAAK,IAAC,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,UAAU,EAAG,CACxC,CACJ,EACN,qBAAC,GAAG,IAAC,SAAS,EAAC,KAAK,GAChB,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,QAAS,EAC/B,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,GAClB,qBAAC,KAAK,IAAC,IAAI,EAAC,UAAU,EAAC,SAAS,EAAC,SAAS,EAAG,CAC3C,CACJ,CACJ,CACJ,CAAC;QACX,CAAC;QACL,iBAAC;IAAD,CA1BA,AA0BC,CA1B+B,SAAI,GA0BnC;IA1BY,eAAU,aA0BtB,CAAA;AACL,CAAC,EA5BS,IAAI,KAAJ,IAAI,QA4Bb;ACpCD;;;;;GAKG;AAEH,mCAAmC;AACnC,IAAU,IAAI,CAcb;AAdD,WAAU,IAAI,EAAC,CAAC;IACZ;QAA4B,0BAA8B;QACtD,gBAAY,KAAkB;YAC1B,kBAAM,KAAK,CAAC,CAAC;YACb,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC;QAEM,uBAAM,GAAb;YACI,MAAM,CAAC,qBAAC,GAAG,IAAC,SAAS,EAAC,MAAM,GACxB,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,YAAa,EACnC,qBAAC,GAAG,IAAC,SAAS,EAAC,MAAM,mCAAoC,CACvD,CAAC;QACX,CAAC;QACL,aAAC;IAAD,CAZA,AAYC,CAZ2B,SAAI,GAY/B;IAZY,WAAM,SAYlB,CAAA;AACL,CAAC,EAdS,IAAI,KAAJ,IAAI,QAcb;ACtBD;;;;;GAKG;AAEH,gCAAgC;AAChC,8CAA8C;AAC9C,4CAA4C;AAC5C,+CAA+C;AAC/C,8CAA8C;AAC9C,0CAA0C;AAC1C,IAAU,IAAI,CA+Cb;AA/CD,WAAU,IAAI,EAAC,CAAC;IACZ;QAA2B,yBAA8B;QAGrD,eAAY,KAAkB;YAC1B,kBAAM,KAAK,CAAC,CAAC;YACb,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC5B,IAAI,IAAI,GAAoB,IAAI,CAAC,KAAK,CAAC,IAAuB,CAAC;YAC/D,IAAI,CAAC,SAAS,GAAG;gBACb,oBAAC,eAAU,GAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,CAAE,EAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAG,EAAE;gBACpE,oBAAC,aAAQ,GAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAE,EAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAG,EAAE;gBAChE,oBAAC,gBAAW,GAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAE,EAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAG,EAAE;gBACtE,oBAAC,eAAU,GAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,CAAE,EAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAG,EAAE;gBACpE,oBAAC,WAAM,GAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAE,EAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAG,EAAE;aAC/D,CAAC;QACN,CAAC;QAEM,sBAAM,GAAb;YACI,IAAI,IAAI,GAAoB,IAAI,CAAC,KAAK,CAAC,IAAuB,CAAC;YAC/D,IAAI,aAAa,GAAW,cAAc,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,WAAW,GAAG,EAAE,CAAC,CAAC;YACzF,MAAM,CAAC,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,GACzB,qBAAC,GAAG,IAAC,SAAS,EAAC,WAAW,GACtB,qBAAC,IAAI,IAAC,SAAS,EAAC,OAAO,cAAgB,CACrC,EACN,qBAAC,GAAG,IAAC,SAAS,EAAC,iBAAiB,GAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,CAAE,CACjC,EACN,qBAAC,GAAG,IAAC,SAAS,EAAC,cAAc,GAErB,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;gBACtB,qBAAC,IAAI,IAAC,SAAS,EAAC,cAAc,GAC1B,qBAAC,IAAI,IAAC,SAAS,EAAC,cAAc,GAAC,qBAAC,CAAC,gBAAS,CAAO,CAC9C;gBACP,EACH,EACD,qBAAC,IAAI,IAAC,SAAS,EAAC,eAAe,GAC3B,qBAAC,IAAI,IAAC,SAAS,EAAE,aAAc,EAAC,OAAO,EAAE,UAAC,EAAoB,IAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAA,CAAE,GAAC,qBAAC,CAAC,eAAQ,CAAO,EAEtG,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;gBACtB,qBAAC,IAAI,IAAC,SAAS,EAAC,cAAc,EAAC,OAAO,EAAE,UAAC,EAAoB,IAAM,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAA,CAAE,GAAC,qBAAC,CAAC,cAAO,CAAO;gBACtG,qBAAC,IAAI,IAAC,SAAS,EAAC,cAAc,EAAC,OAAO,EAAE,UAAC,EAAoB,IAAM,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA,CAAE,GAAC,qBAAC,CAAC,eAAQ,CACjG,CACE,CACL,CACJ,CAAC;QACX,CAAC;QACL,YAAC;IAAD,CA7CA,AA6CC,CA7C0B,SAAI,GA6C9B;IA7CY,UAAK,QA6CjB,CAAA;AACL,CAAC,EA/CS,IAAI,KAAJ,IAAI,QA+Cb;AC5DD;;;;;GAKG;AAEH,AAGA,iCAHiC;AACjC,0CAA0C;ACR1C;;;;;GAKG;AAEH,AAGA,iCAHiC;AACjC,0CAA0C;ACR1C;;;;;GAKG;AAEH,AAGA,qCAHqC;AACrC,0CAA0C;ACR1C;;;;;GAKG;AACH,mCAAmC;AACnC,+DAA+D;AAC/D,IAAU,OAAO,CAyBhB;AAzBD,WAAU,OAAO,EAAC,CAAC;IACf;QAAoC,kCAAI;QAEpC;;WAEG;QACH,wBAAY,MAA+B;YACvC,iBAAO,CAAC;YACR,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACzB,CAAC;QAED;;WAEG;QACI,mCAAU,GAAjB,UAAkB,IAAY;YAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;QAC/B,CAAC;QAED;;WAEG;QACI,iCAAQ,GAAf;YACI,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACL,qBAAC;IAAD,CAvBA,AAuBC,CAvBmC,YAAI,GAuBvC;IAvBY,sBAAc,iBAuB1B,CAAA;AACL,CAAC,EAzBS,OAAO,KAAP,OAAO,QAyBhB;ACjCD;;;;;GAKG;AAEH,AAGA,qCAHqC;AACrC,0CAA0C;ACR1C;;;;;GAKG;AACH,mCAAmC;AACnC,6DAA6D;AAC7D,IAAU,OAAO,CAuBhB;AAvBD,WAAU,OAAO,EAAC,CAAC;IACf;QAAkC,gCAAI;QAClC;;WAEG;QACH,sBAAY,MAA+B;YACvC,iBAAO,CAAC;QACZ,CAAC;QAED;;WAEG;QACI,2BAAI,GAAX,UAAY,MAA+B;YACvC,EAAE;QACN,CAAC;QAED;;WAEG;QACI,+BAAQ,GAAf;YACI,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACL,mBAAC;IAAD,CArBA,AAqBC,CArBiC,YAAI,GAqBrC;IArBY,oBAAY,eAqBxB,CAAA;AACL,CAAC,EAvBS,OAAO,KAAP,OAAO,QAuBhB;AC/BD;;;;;GAKG;AAEH,AAGA,qCAHqC;AACrC,0CAA0C;ACR1C;;;;;GAKG;AACH,mCAAmC;AACnC,gEAAgE;AAChE,IAAU,OAAO,CA8BhB;AA9BD,WAAU,OAAO,EAAC,CAAC;IACf;QAAqC,mCAAI;QACrC;;WAEG;QACH,yBAAY,MAA+B;YACvC,iBAAO,CAAC;QACZ,CAAC;QAED;;WAEG;QACI,8BAAI,GAAX,UAAY,IAAY;YACpB,EAAE;QACN,CAAC;QAED;;WAEG;QACI,oCAAU,GAAjB,UAAkB,IAAY;YAC1B,EAAE;QACN,CAAC;QAED;;WAEG;QACI,kCAAQ,GAAf;YACI,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACL,sBAAC;IAAD,CA5BA,AA4BC,CA5BoC,YAAI,GA4BxC;IA5BY,uBAAe,kBA4B3B,CAAA;AACL,CAAC,EA9BS,OAAO,KAAP,OAAO,QA8BhB;ACtCD;;;;;GAKG;AAEH,AAGA,qCAHqC;AACrC,0CAA0C;ACR1C;;;;;GAKG;AACH,mCAAmC;AACnC,+DAA+D;AAC/D,IAAU,OAAO,CAuBhB;AAvBD,WAAU,OAAO,EAAC,CAAC;IACf;QAAoC,kCAAI;QACpC;;WAEG;QACH,wBAAY,MAA+B;YACvC,iBAAO,CAAC;QACZ,CAAC;QAED;;WAEG;QACI,gCAAO,GAAd;YACI,EAAE;QACN,CAAC;QAED;;WAEG;QACI,iCAAQ,GAAf;YACI,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACL,qBAAC;IAAD,CArBA,AAqBC,CArBmC,YAAI,GAqBvC;IArBY,sBAAc,iBAqB1B,CAAA;AACL,CAAC,EAvBS,OAAO,KAAP,OAAO,QAuBhB;AC/BD;;;;;GAKG;AAEH,AAGA,qCAHqC;AACrC,0CAA0C;ACR1C;;;;;GAKG;AACH,mCAAmC;AACnC,2DAA2D;AAC3D,IAAU,OAAO,CAuBhB;AAvBD,WAAU,OAAO,EAAC,CAAC;IACf;QAAgC,8BAAI;QAChC;;WAEG;QACH,oBAAY,MAA+B;YACvC,iBAAO,CAAC;QACZ,CAAC;QAED;;WAEG;QACI,2BAAM,GAAb,UAAc,MAA+B;YACzC,EAAE;QACN,CAAC;QAED;;WAEG;QACI,6BAAQ,GAAf;YACI,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACL,iBAAC;IAAD,CArBA,AAqBC,CArB+B,YAAI,GAqBnC;IArBY,kBAAU,aAqBtB,CAAA;AACL,CAAC,EAvBS,OAAO,KAAP,OAAO,QAuBhB;AC/BD;;;;;GAKG;AACH,gCAAgC;AAChC,0CAA0C;AAC1C,uDAAuD;AACvD,iDAAiD;AACjD,+CAA+C;AAC/C,kDAAkD;AAClD,iDAAiD;AACjD,6CAA6C;AAC7C,IAAU,OAAO,CAuGhB;AAvGD,WAAU,OAAO,EAAC,CAAC;IACf;QAA+B,6BAAI;QAY/B;;WAEG;QACH,mBAAY,SAAkB;YAC1B,iBAAO,CAAC;YAfZ,+BAA+B;YAC/B,mCAAmC;YAC3B,gBAAW,GAA4B,EAAE,CAAC;YAClD;;eAEG;YACK,oBAAe,GAAgC,EAAE,CAAC;YAC1D;;eAEG;YACK,cAAS,GAAW,CAAC,CAAC;YAM1B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAA2B,oBAAC,IAAI,CAAC,KAAK,GAAC,IAAI,EAAE,IAAK,EAAG,EAAE,SAAS,CAAe,CAAC;QAC5G,CAAC;QAED;;WAEG;QACI,2BAAO,GAAd;YACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;QAED;;WAEG;QACI,wBAAI,GAAX,UAAY,IAAY;YACpB,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC;gBACrD,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YACtC,IAAI,IAAgB,CAAC;YACrB,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACX,KAAK,YAAY;oBACb,IAAI,GAAG,IAAI,sBAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC5C,KAAK,CAAC;gBACV,KAAK,UAAU;oBACX,IAAI,GAAG,IAAI,oBAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC1C,KAAK,CAAC;gBACV,KAAK,aAAa;oBACd,IAAI,GAAG,IAAI,uBAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC7C,KAAK,CAAC;gBACV,KAAK,YAAY;oBACb,IAAI,GAAG,IAAI,sBAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC5C,KAAK,CAAC;gBACV,KAAK,QAAQ;oBACT,IAAI,GAAG,IAAI,kBAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACxC,KAAK,CAAC;YACd,CAAC;YACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;YAClC,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED;;;WAGG;QACI,8BAAU,GAAjB;YACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;QAED;;;WAGG;QACI,8BAAU,GAAjB,UAAkB,KAAa;YAC3B,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;gBAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACtC,CAAC;QAED;;WAEG;QACI,4BAAQ,GAAf,UAAgB,EAAoB;YAChC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;gBAAC,MAAM,CAAC;YAChC,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QAC5B,CAAC;QAED;;WAEG;QACI,wBAAI,GAAX,UAAY,EAAoB;YAC5B,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QAC5B,CAAC;QAED;;WAEG;QACI,0BAAM,GAAb,UAAc,EAAoB;YAC9B,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,WAAW,CAAC;QAC7D,CAAC;QAED;;WAEG;QACI,4BAAQ,GAAf;YACI,EAAE;QACN,CAAC;QACL,gBAAC;IAAD,CArGA,AAqGC,CArG8B,YAAI,GAqGlC;IArGY,iBAAS,YAqGrB,CAAA;AACL,CAAC,EAvGS,OAAO,KAAP,OAAO,QAuGhB;ACrHD;;;;;GAKG;AAEH,sCAAsC;AAEtC,IAAU,OAAO,CAWhB;AAXD,WAAU,SAAO,EAAC,CAAC;IACf;QAEI;;WAEG;QACH;YACI,IAAI,SAAS,GAAY,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC3D,IAAI,CAAC,KAAK,GAAG,IAAI,mBAAS,CAAC,SAAS,CAAC,CAAC;QAC1C,CAAC;QACL,cAAC;IAAD,CATA,AASC,IAAA;IATY,iBAAO,UASnB,CAAA;AACL,CAAC,EAXS,OAAO,KAAP,OAAO,QAWhB;ACpBD;;;;;GAKG;AACH,2CAA2C;AAC3C;IAII;;OAEG;IACH;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;IACzC,CAAC;IARa,cAAO,GAAW,mBAAmB,CAAC;IASxD,aAAC;AAAD,CAVA,AAUC,IAAA","file":"wizard.js","sourcesContent":["/**\n * 声明哈希表接口规范。\n *\n * @author    姚尧 <yaogaoyu@163.com>\n * @license   GPL-3.0\n * @file      Util/IHashTable.ts\n */\n\nnamespace Util {\n    export interface IHashTable<T> {\n        [index: string]: T;\n    }\n}\n","/**\n * 声明视图状态接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_View/IState.ts\n */\n\n/// <reference path=\"../../Util/IHashTable.ts\" />\n\nnamespace Core {\n    export interface IState extends Util.IHashTable<any> {\n    }\n}\n","/**\n * 声明视图属性接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_View/IProps.ts\n */\n\n/// <reference path=\"../../Util/IHashTable.ts\" />\n/// <reference path=\"../_Runtime/IFlow.ts\" />\n\nnamespace Core {\n    export interface IProps extends Util.IHashTable<any> {\n        /**\n         * 关联业务流。\n         */\n        flow?: IFlow;\n\n        /**\n         * 关联业务流。\n         */\n        config?: Util.IHashTable<string>;\n    }\n}\n","/**\n * 声明视图规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_View/IView.ts\n */\n\n/// <reference path=\"../../Util/IHashTable.ts\" />\n/// <reference path=\"../../../include/react/react-global.d.ts\" />\n/// <reference path=\"IState.ts\" />\n/// <reference path=\"IProps.ts\" />\n/// <reference path=\"../_Runtime/IFlow.ts\" />\n\nnamespace Core {\n    export interface IView extends React.Component<IProps, IState> {\n    }\n}\n","/**\n * 声明（运行时）事件元信息接口规范。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      Core/_Ev/IEventMetas.ts\n */\n\nnamespace Core {\n\n    export interface IEventMetas<T> extends Util.IHashTable<any> {\n        /**\n         * 触发对象。\n         */\n        target: T;\n    }\n}\n","/**\n * 声明（运行时）事件接口规范。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      Core/_Ev/IEvent.ts\n */\n\n/// <reference path=\"IEventMetas.ts\" />\n\nnamespace Core {\n    export interface IEvent<T> {\n        /**\n         * 事件触发对象。\n         */\n        target: T;\n\n        // constructor(metas: IEventMetas<T>): IEvent<T>;\n\n        /**\n         * 获取类型。\n         */\n        gType(): string;\n    }\n}\n","/**\n * 声明（运行时）事件监听函数接口规范。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      Core/_Ev/IEventListener.ts\n */\n\n/// <reference path=\"IEvent.ts\" />\n\nnamespace Core {\n    export interface IEventListener<T> {\n        (event: IEvent<T>): void;\n    }\n}\n","/**\n * 声明（运行时）事件宿主接口规范。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      Core/_Ev/IEmittable.ts\n */\n\n/// <reference path=\"IEventListener.ts\" />\n\nnamespace Core {\n    export interface IEmittable {\n        /**\n         * 新增事件监听。\n         */\n        addEventListener<T>(type: string, listener: IEventListener<T>): IEmittable;\n\n        /**\n         * 取消事件监听。\n         */\n        removeEventListener<T>(type: string, listener: IEventListener<T>): IEmittable;\n\n        /**\n         * 发生事件。\n         */\n        dispatchEvent<T>(event: IEvent<T>): IEmittable;\n    }\n}\n","/**\n * 声明（运行时）业务逻辑流接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_Runtime/IFlow.ts\n */\n\n/// <reference path=\"../_View/IView.ts\" />\n/// <reference path=\"../_Ev/IEmittable.ts\" />\n\nnamespace Core {\n    export interface IFlow extends IEmittable {\n        /**\n         * 设置绑定视图。\n         */\n        sView(view: IView): IFlow;\n        /**\n         * 获取绑定视图。\n         */\n        gView(): IView;\n    }\n}\n","/**\n * 声明数组遍历函数接口规范。\n *\n * @author    姚尧 <yaogaoyu@163.com>\n * @license   GPL-3.0\n * @file      Util/IArrayIterator.ts\n */\n\nnamespace Util {\n    export interface IArrayIterator<T, U> {\n        (element: T, index?: number, array?: T[]): U;\n    }\n}\n","/**\n * 声明对象遍历函数接口规范。\n *\n * @author    姚尧 <yaogaoyu@163.com>\n * @license   GPL-3.0\n * @file      Util/IObjectIterator.ts\n */\n\n/// <reference path=\"IHashTable.ts\" />\n\nnamespace Util {\n    export interface IObjectIterator<T, U> {\n        (element: T, index?: string, object?: IHashTable<T>): U;\n    }\n}\n","/**\n * 定义数组类工具方法。\n *\n * @author    姚尧 <yaogaoyu@163.com>\n * @license   GPL-3.0\n * @file      Util/_iterator.ts\n */\n\n/// <reference path=\"IArrayIterator.ts\" />\n/// <reference path=\"IObjectIterator.ts\" />\n\nnamespace Util {\n    /**\n     * 无条件遍历整个数组或对象。\n     */\n    export function each<T>(array: T[], iterator: IArrayIterator<T, any>, thisArg?: any): void;\n    export function each<T>(object: IHashTable<T>, iterator: IObjectIterator<T, any>, thisArg?: any): void;\n    export function each<T>(obj: any, cb: any, $this: any): void {\n        $this = $this || {};\n        var ii: any;\n        if (obj instanceof Array) {\n            if (obj.forEach)\n                return obj.forEach(cb, $this);\n            for (ii = 0; ii < obj.length; ii++)\n                cb.call($this, obj[ii], ii, obj);\n            return;\n        }\n        for (ii in obj)\n            if (obj.hasOwnProperty(ii))\n                cb.call($this, obj[ii], ii, obj);\n    }\n\n    /**\n     * 遍历数组或对象至第一次失败。\n     */\n    export function every<T>(array: T[], iterator: IArrayIterator<T, boolean>, thisArg?: any): boolean;\n    export function every<T>(object: IHashTable<T>, iterator: IObjectIterator<T, boolean>, thisArg?: any): boolean;\n    export function every<T>(obj: any, cb: any, $this: any): boolean {\n        $this = $this || {};\n        var ii: any;\n        if (obj instanceof Array) {\n            if (obj.every)\n                return obj.every(cb, $this);\n            for (ii = 0; ii < obj.length; ii++)\n                if (!cb.call($this, obj[ii], ii, obj))\n                    return false;\n        } else\n            for (ii in obj)\n                if (obj.hasOwnProperty(ii) && !cb.call($this, obj[ii], ii, obj))\n                    return false;\n        return true;\n    }\n\n    /**\n     * 遍历数组或对象至第一次成功。\n     */\n    export function some<T>(array: T[], iterator: IArrayIterator<T, boolean>, thisArg?: any): boolean;\n    export function some<T>(object: IHashTable<T>, iterator: IObjectIterator<T, boolean>, thisArg?: any): boolean;\n    export function some<T>(obj: any, cb: any, $this: any): boolean {\n        $this = $this || {};\n        var ii: any;\n        if (obj instanceof Array) {\n            if (obj.some)\n                return obj.some(cb, $this);\n            for (ii = 0; ii < obj.length; ii++)\n                if (cb.call($this, obj[ii], ii, obj))\n                    return true;\n        } else\n            for (ii in obj)\n                if (obj.hasOwnProperty(ii) && cb.call($this, obj[ii], ii, obj))\n                    return true;\n        return false;\n    }\n\n    /**\n     * 定位子元素。\n     */\n    export function indexOf<T>(array: T[], element: T, offset?: number): number;\n    export function indexOf<T>(object: IHashTable<T>, element: T): string | number;\n    export function indexOf<T>(obj: any, item: T, offset: number = 0): any {\n        var ii: any;\n        if (obj instanceof Array) {\n            if (obj.indexOf)\n                return obj.indexOf(item, offset);\n            for (ii = offset; ii < obj.length; ii++)\n                if (obj[ii] == item)\n                    return ii;\n        } else\n            for (ii in obj)\n                if (obj.hasOwnProperty(ii) && obj[ii] == item)\n                    return ii;\n        return -1;\n    }\n\n    /**\n     * 克隆。\n     */\n    export function clone<T>(orig: T[]): T[];\n    export function clone<T>(orig: T): T;\n    export function clone(orig: any): any {\n        if ('object' != typeof orig)\n            return orig;\n        if (orig instanceof Array)\n            return (<any[]> orig).slice(0);\n        var dolly: IHashTable<any> = {};\n        Util.each(orig, (value: any, key: string) => {\n            dolly[key] = value;\n        });\n        return dolly;\n    }\n}\n","/**\n * 定义（运行时）业务逻辑流组件。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Runtime/Flow.ts\n */\n\n/// <reference path=\"../Core/_Runtime/IFlow.ts\" />\n/// <reference path=\"../Util/_iterator.ts\" />\n\nnamespace Runtime {\n    export class Flow implements Core.IFlow {\n        /**\n         * 绑定视图。\n         */\n        protected view: Core.IView;\n\n        /**\n         * 事件监听器集合。\n         */\n        private listeners: Util.IHashTable<Core.IEventListener<Core.IFlow>[]>;\n\n        /**\n         * 构造函数。\n         */\n        constructor() {\n            this.listeners = {};\n        }\n\n        /**\n         * 获取绑定视图。\n         */\n        public gView(): Core.IView {\n            return this.view;\n        }\n\n        /**\n         * 设置绑定视图。\n         */\n        public sView(view: Core.IView): Core.IFlow {\n            this.view = view;\n            return this;\n        }\n\n        /**\n         * 新增事件监听。\n         */\n        public addEventListener<T extends Core.IFlow>(type: string, listener: Core.IEventListener<T>): Flow {\n            this.listeners[type] = this.listeners[type] || [];\n            var pos: number = Util.indexOf(this.listeners[type], listener);\n            if (-1 == pos)\n                this.listeners[type].push(listener);\n            return this;\n        }\n\n        /**\n         * 取消事件监听。\n         */\n        public removeEventListener<T extends Core.IFlow>(type: string, listener: Core.IEventListener<T>): Flow {\n            this.listeners[type] = this.listeners[type] || [];\n            var pos: number = Util.indexOf(this.listeners[type], listener);\n            if (-1 != pos)\n                this.listeners[type].splice(pos, 1);\n            return this;\n        }\n\n        /**\n         * 发生事件。\n         */\n        public dispatchEvent<T extends Core.IFlow>(event: Core.IEvent<T>): Flow {\n            Util.each(this.listeners[event.gType()] || [], (listener: Core.IEventListener<T>) => {\n                listener(event);\n            });\n            return this;\n        }\n    }\n}\n","/**\n * 定义视图抽象组件。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      View/View.ts\n */\n\n/// <reference path=\"../../include/tsd.d.ts\" />\n/// <reference path=\"../Core/_View/IView.ts\" />\n\nnamespace View {\n    export class View<P extends Core.IProps, S extends Core.IState> extends React.Component<P, S> implements Core.IView {\n    }\n}\n","/**\n * 定义Path信息组件。\n *\n * @author    姚尧 <yaogaoyu@163.com>\n * @license   GPL-3.0\n * @file      Util/Path.ts\n */\n\nnamespace Util {\n    export namespace Path {\n        /**\n         * 获取指定部署根目录。\n         */\n        export function gOrigin(): string {\n            let origin: string = window.location.origin;\n            let pathname: string = window.location.pathname;\n            let root: string = pathname.match(/.*\\//)[0];\n            return origin + root ;\n        }\n    }\n}\n","/**\n * 配置向导-节点类型选择主视图。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      View/NodeChoice.ts\n */\n\n/// <reference path=\"../View.ts\" />\n/// <reference path=\"../../Util/Path.ts\" />\nnamespace View {\n    export class NodeChoice extends View<Core.IProps, Core.IState> {\n        private origin: string = Util.Path.gOrigin();\n        constructor(props: Core.IProps) {\n            super(props);\n            this.props.flow.sView(this);\n        }\n\n        public render(): JSX.Element {\n            return <div className='wrap'>\n                <div className='title'>步骤一：节点类型选择</div>\n                <div className='desc'>选择一个进行同步服务的节点类型</div>\n                <div className='formWrap'>\n                    <div className='nodeType'>\n                        <span className='inline type'>\n                            <span className={'ibtn typeBtn' + (this.props.config['type'] == 'master' ? ' selected' : '')} onClick={(evt: React.MouseEvent) => {this.choice(evt, 'master');}}><img src={this.origin + 's/images/node.png'}/></span>\n                        </span>\n                        <span className='inline type typeName'>Master</span>\n                        <span className='inline type desc'>主库节点，每个注册到此主节点上的从库节点将使用主库节点提供的服务进行数据同步。</span>\n                    </div>\n                    <div className='nodeType'>\n                        <span className='inline type'>\n                            <span className={'ibtn typeBtn' + (this.props.config['type'] == 'slaver' ? ' selected' : '')} onClick={(evt: React.MouseEvent) => {this.choice(evt, 'slaver');}}><img src={this.origin + 's/images/node.png'}/></span>\n                        </span>\n                        <span className='inline type typeName'>Slaver</span>\n                        <span className='inline type desc'>从库节点，连接主库节点，与所有注册在主库节点上的从库节点进行数据同步。</span>\n                    </div>\n                </div>\n            </div>;\n        }\n\n        private choice(ev: React.MouseEvent, type: string): void {\n            if (!type) return ;\n            (this.props.flow as Core.INodeChoiceFlow).choiceType(type);\n            this.forceUpdate();\n            // 发送事件到stage进行下一个步骤\n        }\n    }\n}\n","/**\n * 配置向导-数据库配置主视图。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      View/ConfigDB.ts\n */\n\n/// <reference path=\"../View.ts\" />\nnamespace View {\n    export class ConfigDB extends View<Core.IProps, Core.IState> {\n        private databases: Util.IHashTable<any> = {\n            'Oracle': { 'driver': '', 'url': 'jdbc:oracle:thin:@127.0.0.1:1521:databasename' },\n            'SQL Server': { 'driver': '', 'url': 'jdbc:jtds:sqlserver://hostname/databasename;useCursors=true;bufferMaxMemory=10240;lobBuffer=5242880;socketTimeout=300;appName=syncdb' },\n            'DB2': { 'driver': '', 'url': 'jdbc:db2://hostname:50000/databasename' },\n            'Mysql': { 'driver': '', 'url': 'jdbc:mysql://hostname/databasename?tinyInt1isBit=false&zeroDateTimeBehavior=convertToNull' },\n            'Infomix': { 'driver': '', 'url': 'jdbc:informix-sqli://hostname:9088/databasename:INFORMIXSERVER=ol_ids_1150_1' }\n        };\n\n        private dbOptions: JSX.Element[] = [];\n        constructor(props: Core.IProps) {\n            super(props);\n            this.props.flow.sView(this);\n            Util.each(this.databases, (info: Util.IHashTable<string>, dbName: string) => {\n                this.dbOptions.push(<option value={dbName}>{dbName}</option>);\n            });\n        }\n\n        public render(): JSX.Element {\n            return <div className='wrap'>\n                <div className='title'>步骤二：数据库连接配置</div>\n                <div className='desc'>数据库配置完成后请先测试连接，测试成功才能进行下一步。</div>\n                <div className='formWrap'>\n                    <div className='row'>\n                        <div className='title'>数据库</div>\n                        <div className='input'>\n                            <select className='sel dbType'>\n                                <option value=\"-1\">请选择数据库</option>\n                                {this.dbOptions}\n                            </select>\n                        </div>\n                    </div>\n                    <div className='row'>\n                        <div className='title'>数据库连接</div>\n                        <div className='input'>\n                            <input type='text' className='text dbInput' />\n                        </div>\n                    </div>\n                    <div className='row'>\n                        <div className='title'>用户名</div>\n                        <div className='input'>\n                            <input type='text' className='text dbUser' />\n                        </div>\n                    </div>\n                    <div className='row'>\n                        <div className='title'>密码</div>\n                        <div className='input'>\n                            <input type='password' className='text dbPsw' />\n                        </div>\n                    </div>\n                </div>\n            </div>;\n        }\n    }\n}\n","/**\n * 配置向导-节点注册主视图。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      View/RegisteInfo.ts\n */\n\n/// <reference path=\"../View.ts\" />\nnamespace View {\n    export class RegisteInfo extends View<Core.IProps, Core.IState> {\n        constructor(props: Core.IProps) {\n            super(props);\n            this.props.flow.sView(this);\n        }\n\n        public render(): JSX.Element {\n            return <div className='wrap'>\n                <div className='title'>步骤三：节点注册信息</div>\n                {\n                    this.props['type'] == 'master' ?\n                    <div className='desc'>连接到此主库节点的从库节点将使用此URL进行节点注册</div> :\n                    <div className='desc'>请填写主库节点的注册URL</div>\n                }\n                <div className='formWrap'>\n                    {\n                        this.props.config['type'] == 'master' ?\n                        <div className='row'>\n                            <div className='title'>连接到此主库节点的从库节点将使用此URL进行节点注册</div>\n                        </div> :\n                        <div className='row'>\n                            <div className='title'>注册主库的URL</div>\n                            <div className='input'>\n                                <input type='text' className='text url' />\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div>;\n        }\n    }\n}\n","/**\n * 配置向导-设置用户向导主视图。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      View/ConfigUser.ts\n */\n\n/// <reference path=\"../View.ts\" />\nnamespace View {\n    export class ConfigUser extends View<Core.IProps, Core.IState> {\n        constructor(props: Core.IProps) {\n            super(props);\n            this.props.flow.sView(this);\n        }\n\n        public render(): JSX.Element {\n            return <div className='wrap'>\n                <div className='title'>步骤四：注册登录用户</div>\n                <div className='desc'>注册一个用户登录到本系统</div>\n                <div className='formWrap'>\n                    <div className='row'>\n                        <div className='title'>用户名</div>\n                        <div className='input'>\n                            <input type='text' className='userName' />\n                        </div>\n                    </div>\n                    <div className='row'>\n                        <div className='title'>密码</div>\n                        <div className='input'>\n                            <input type='password' className='userPsw' />\n                        </div>\n                    </div>\n                </div>\n            </div>;\n        }\n    }\n}\n","/**\n * 配置向导-完成向导主视图。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      View/Finish.ts\n */\n\n/// <reference path=\"../View.ts\" />\nnamespace View {\n    export class Finish extends View<Core.IProps, Core.IState> {\n        constructor(props: Core.IProps) {\n            super(props);\n            this.props.flow.sView(this);\n        }\n\n        public render(): JSX.Element {\n            return <div className='wrap'>\n                <div className='title'>步骤五：完成</div>\n                <div className='desc'>请使用刚才设置的用户名和密码登录，点击完成跳转到登录页面。</div>\n            </div>;\n        }\n    }\n}\n","/**\n * 配置向导引导主视图。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      View/Stage.ts\n */\n\n/// <reference path=\"View.ts\" />\n/// <reference path=\"_Steps/NodeChoice.tsx\" />\n/// <reference path=\"_Steps/ConfigDB.tsx\" />\n/// <reference path=\"_Steps/RegisteInfo.tsx\" />\n/// <reference path=\"_Steps/ConfigUser.tsx\" />\n/// <reference path=\"_Steps/Finish.tsx\" />\nnamespace View {\n    export class Stage extends View<Core.IProps, Core.IState> {\n        private stepViews: JSX.Element[];\n\n        constructor(props: Core.IProps) {\n            super(props);\n            this.props.flow.sView(this);\n            let flow: Core.IStageFlow = this.props.flow as Core.IStageFlow;\n            this.stepViews = [\n                <NodeChoice flow={flow.make('nodeChoice')} config={flow.gConfig()}/>,\n                <ConfigDB flow={flow.make('configDB')} config={flow.gConfig()}/>,\n                <RegisteInfo flow={flow.make('registeInfo')} config={flow.gConfig()}/>,\n                <ConfigUser flow={flow.make('configUser')} config={flow.gConfig()}/>,\n                <Finish flow={flow.make('finish')} config={flow.gConfig()}/>\n            ];\n        }\n\n        public render(): JSX.Element {\n            let flow: Core.IStageFlow = this.props.flow as Core.IStageFlow;\n            let previousStyle: string = 'btn stageBtn' + (flow.gStepIndex() <= 0 ? ' disabled' : '');\n            return <div className='stage'>\n                <div className='phase top'>\n                    <span className='title'>同步工具配置向导</span>\n                </div>\n                <div className='phase stageWrap'>\n                    {this.stepViews[flow.gStepIndex()]}\n                </div>\n                <div className='phase bottom'>\n                    {\n                        flow.gStepIndex() == 1 ?\n                        <span className='left btnWrap'>\n                            <span className='btn stageBtn'><p>测试连接</p></span>\n                        </span> :\n                        ''\n                    }\n                    <span className='right btnWrap'>\n                        <span className={previousStyle} onClick={(ev: React.MouseEvent) => {flow.previous(ev);}}><p>上一步</p></span>\n                        {\n                            flow.gStepIndex() >= 4 ?\n                            <span className='btn stageBtn' onClick={(ev: React.MouseEvent) => {flow.finish(ev);}}><p>完成</p></span> :\n                            <span className='btn stageBtn' onClick={(ev: React.MouseEvent) => {flow.next(ev);}}><p>下一步</p></span>\n                        }\n                    </span>\n                </div>\n            </div>;\n        }\n    }\n}\n","/**\n * 声明引导程序业务流接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_Runtime/IStageFlow.ts\n */\n\n/// <reference path=\"IFlow.ts\" />\n/// <reference path=\"../_View/IView.ts\" />\n\nnamespace Core {\n    export interface IStageFlow extends IFlow {\n        /**\n         * 取得配置数据。\n         */\n        gConfig(): Util.IHashTable<string>;\n\n        /**\n         * 取得当前步骤索引号。\n         * 索引号从0开始\n         */\n        gStepIndex(): number;\n\n        /**\n         * 设置当前步骤索引号。\n         * 索引号从0开始\n         */\n        sStepIndex(index: number): void;\n\n        /**\n         * 绑定子视图与Flow。\n         */\n        make(type: string): Core.IFlow;\n\n        /**\n         * 上一步。\n         */\n        previous(ev: React.MouseEvent): void;\n\n        /**\n         * 下一步。\n         */\n        next(ev: React.MouseEvent): void;\n\n        /**\n         * 完成。\n         */\n        finish(ev: React.MouseEvent): void;\n\n        /**\n         * 测试。\n         */\n        connTest(): void;\n    }\n}\n","/**\n * 声明配置完成完成业务流接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_Runtime/IFinishFlow.ts\n */\n\n/// <reference path=\"IFlow.ts\" />\n/// <reference path=\"../_View/IView.ts\" />\n\nnamespace Core {\n    export interface IStepFlow extends IFlow {\n        /**\n         * 验证步骤\n         */\n        validate(): boolean;\n    }\n}\n","/**\n * 声明节点类型选择业务流接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_Runtime/INodeChoiceFlow.ts\n */\n\n/// <reference path=\"IStepFlow.ts\" />\n/// <reference path=\"../_View/IView.ts\" />\n\nnamespace Core {\n    export interface INodeChoiceFlow extends IStepFlow {\n        /**\n         * 节点类型选择业务\n         */\n        choiceType(type: string): void;\n    }\n}\n","/**\n * 节点类型选择实体。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Runtime/NodeChoiceFlow.ts\n */\n/// <reference path=\"../Flow.ts\" />\n/// <reference path=\"../../Core/_Runtime/INodeChoiceFlow.ts\" />\nnamespace Runtime {\n    export class NodeChoiceFlow extends Flow implements Core.INodeChoiceFlow {\n        private config: Util.IHashTable<string>;\n        /**\n         * 构造函数。\n         */\n        constructor(config: Util.IHashTable<string>) {\n            super();\n            this.config = config;\n        }\n\n        /**\n         * 节点类型选择业务\n         */\n        public choiceType(type: string): void {\n            this.config['type'] = type;\n        }\n\n        /**\n         * 步骤验证\n         */\n        public validate(): boolean {\n            return true;\n        }\n    }\n}\n","/**\n * 声明数据库配置业务流接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_Runtime/IConfigDBFlow.ts\n */\n\n/// <reference path=\"IStepFlow.ts\" />\n/// <reference path=\"../_View/IView.ts\" />\n\nnamespace Core {\n    export interface IConfigDBFlow extends IStepFlow {\n        /**\n         * 处理数据库配置业务\n         */\n        save(config: Util.IHashTable<string>): void;\n    }\n}\n","/**\n * 数据库配置实体。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Runtime/ConfigDBFlow.ts\n */\n/// <reference path=\"../Flow.ts\" />\n/// <reference path=\"../../Core/_Runtime/IConfigDBFlow.ts\" />\nnamespace Runtime {\n    export class ConfigDBFlow extends Flow implements Core.IConfigDBFlow {\n        /**\n         * 构造函数。\n         */\n        constructor(config: Util.IHashTable<string>) {\n            super();\n        }\n\n        /**\n         * 处理数据库配置业务\n         */\n        public save(config: Util.IHashTable<string>): void {\n            //\n        }\n\n        /**\n         * 步骤验证\n         */\n        public validate(): boolean {\n            return true;\n        }\n    }\n}\n","/**\n * 声明节点注册业务流接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_Runtime/IRegisteInfoFlow.ts\n */\n\n/// <reference path=\"IStepFlow.ts\" />\n/// <reference path=\"../_View/IView.ts\" />\n\nnamespace Core {\n    export interface IRegisteInfoFlow extends IStepFlow {\n        /**\n         * 保存从端设置的同步接口URL\n         */\n        save(type: string): void;\n\n        /**\n         * 生成主端的同步接口URL\n         */\n        genSyncURL(type: string): void;\n    }\n}\n","/**\n * 节点注册信息实体。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Runtime/RegisteInfoFlow.ts\n */\n/// <reference path=\"../Flow.ts\" />\n/// <reference path=\"../../Core/_Runtime/IRegisteInfoFlow.ts\" />\nnamespace Runtime {\n    export class RegisteInfoFlow extends Flow implements Core.IRegisteInfoFlow {\n        /**\n         * 构造函数。\n         */\n        constructor(config: Util.IHashTable<string>) {\n            super();\n        }\n\n        /**\n         * 保存从端设置的同步接口URL\n         */\n        public save(type: string): void {\n            //\n        }\n\n        /**\n         * 生成主端的同步接口URL\n         */\n        public genSyncURL(type: string): void {\n            //\n        }\n\n        /**\n         * 步骤验证\n         */\n        public validate(): boolean {\n            return true;\n        }\n    }\n}\n","/**\n * 声明保存登录用户业务流接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_Runtime/IConfigUserFlow.ts\n */\n\n/// <reference path=\"IStepFlow.ts\" />\n/// <reference path=\"../_View/IView.ts\" />\n\nnamespace Core {\n    export interface IConfigUserFlow extends IStepFlow {\n        /**\n         * 生成用户\n         */\n        genUser(): void;\n    }\n}\n","/**\n * 生成用户业务流。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Runtime/ConfigUserFlow.ts\n */\n/// <reference path=\"../Flow.ts\" />\n/// <reference path=\"../../Core/_Runtime/IConfigUserFlow.ts\" />\nnamespace Runtime {\n    export class ConfigUserFlow extends Flow implements Core.IConfigUserFlow {\n        /**\n         * 构造函数。\n         */\n        constructor(config: Util.IHashTable<string>) {\n            super();\n        }\n\n        /**\n         * 生成用户\n         */\n        public genUser(): void {\n            //\n        }\n\n        /**\n         * 步骤验证\n         */\n        public validate(): boolean {\n            return true;\n        }\n    }\n}\n","/**\n * 声明配置完成完成业务流接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_Runtime/IFinishFlow.ts\n */\n\n/// <reference path=\"IStepFlow.ts\" />\n/// <reference path=\"../_View/IView.ts\" />\n\nnamespace Core {\n    export interface IFinishFlow extends IStepFlow {\n        /**\n         * 处理配置完成业务\n         */\n        finish(config: Util.IHashTable<string>): void;\n    }\n}\n","/**\n * 配置完成实体。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Runtime/FinishFlow.ts\n */\n/// <reference path=\"../Flow.ts\" />\n/// <reference path=\"../../Core/_Runtime/IFinishFlow.ts\" />\nnamespace Runtime {\n    export class FinishFlow extends Flow implements Core.IFinishFlow {\n        /**\n         * 构造函数。\n         */\n        constructor(config: Util.IHashTable<string>) {\n            super();\n        }\n\n        /**\n         * 处理配置完成业务\n         */\n        public finish(config: Util.IHashTable<string>): void {\n            //\n        }\n\n        /**\n         * 步骤验证\n         */\n        public validate(): boolean {\n            return true;\n        }\n    }\n}\n","/**\n * 向导业务流实体。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Runtime/Stage.ts\n */\n/// <reference path=\"Flow.ts\" />\n/// <reference path=\"../View/Stage.tsx\" />\n/// <reference path=\"../Core/_Runtime/IStageFlow.ts\" />\n/// <reference path=\"_Steps/NodeChoiceFlow.ts\" />\n/// <reference path=\"_Steps/ConfigDBFlow.ts\" />\n/// <reference path=\"_Steps/RegisteInfoFlow.ts\" />\n/// <reference path=\"_Steps/ConfigUserFlow.ts\" />\n/// <reference path=\"_Steps/FinishFlow.ts\" />\nnamespace Runtime {\n    export class StageFlow extends Flow implements Core.IStageFlow {\n        // private curStep: number = 0;\n        // private steps: View.View[] = [];\n        private configDatas: Util.IHashTable<string> = {};\n        /**\n         * 子视图对应业务流实体哈希表\n         */\n        private subViewFlowHash: Util.IHashTable<Core.IFlow> = {};\n        /**\n         * 当前所在步骤的索引号\n         */\n        private stepIndex: number = 0;\n        /**\n         * 构造函数。\n         */\n        constructor(container: Element) {\n            super();\n            this.view = React.render<Core.IProps, Core.IState>(<View.Stage flow={this} />, container) as Core.IView;\n        }\n\n        /**\n         * 取得配置数据。\n         */\n        public gConfig(): Util.IHashTable<string> {\n            return this.configDatas;\n        }\n\n        /**\n         * 绑定子视图与Flow。\n         */\n        public make(type: string): Core.IFlow {\n            if (this.subViewFlowHash && type in this.subViewFlowHash)\n                return this.subViewFlowHash[type];\n            let flow: Core.IFlow;\n            switch (type) {\n                case 'nodeChoice':\n                    flow = new NodeChoiceFlow(this.configDatas);\n                    break;\n                case 'configDB':\n                    flow = new ConfigDBFlow(this.configDatas);\n                    break;\n                case 'registeInfo':\n                    flow = new RegisteInfoFlow(this.configDatas);\n                    break;\n                case 'configUser':\n                    flow = new ConfigUserFlow(this.configDatas);\n                    break;\n                case 'finish':\n                    flow = new FinishFlow(this.configDatas);\n                    break;\n            }\n            this.subViewFlowHash[type] = flow;\n            return flow;\n        }\n\n        /**\n         * 取得当前步骤索引号。\n         * 索引号从0开始\n         */\n        public gStepIndex(): number {\n            return this.stepIndex;\n        }\n\n        /**\n         * 设置当前步骤索引号。\n         * 索引号从0开始\n         */\n        public sStepIndex(index: number): void {\n            if (index < 0) this.stepIndex = 0;\n        }\n\n        /**\n         * 上一步。\n         */\n        public previous(ev: React.MouseEvent): void {\n            if (this.stepIndex <= 0) return;\n            this.stepIndex -= 1;\n            this.view.forceUpdate();\n        }\n\n        /**\n         * 下一步。\n         */\n        public next(ev: React.MouseEvent): void {\n            this.stepIndex += 1;\n            this.view.forceUpdate();\n        }\n\n        /**\n         * 完成。\n         */\n        public finish(ev: React.MouseEvent): void {\n            window.location.href = Util.Path.gOrigin() + 'login.htm';\n        }\n\n        /**\n         * 测试。\n         */\n        public connTest(): void {\n            //\n        }\n    }\n}\n","/**\n * 向导运行时实体。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Runtime/Runtime.ts\n */\n\n/// <reference path=\"StageFlow.tsx\" />\n\nnamespace Runtime {\n    export class Runtime {\n        private stage: StageFlow;\n        /**\n         * 构造函数。\n         */\n        constructor() {\n            let container: Element = document.querySelector('.wizard');\n            this.stage = new StageFlow(container);\n        }\n    }\n}\n","/**\n * 同步工具配置向导入口类。\n *\n * @author    姚尧 <yaogaoyu@163.com>\n * @file      Wizard.ts\n */\n/// <reference path=\"Runtime/Runtime.ts\" />\nclass Wizard {\n    public static version: string = \"${WIZARD_VERSION}\";\n    private runtime: Runtime.Runtime;\n\n    /**\n     * 构造函数。\n     */\n    constructor() {\n        this.runtime = new Runtime.Runtime();\n    }\n}\n"],"sourceRoot":"/source/"}