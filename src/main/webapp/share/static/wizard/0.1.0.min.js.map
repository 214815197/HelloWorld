{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","var/build/wizard"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","wizard","module","Util","__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","each","obj","cb","$this","ii","Array","forEach","every","some","indexOf","item","offset","clone","orig","slice","dolly","value","key","Runtime","Flow","listeners","gView","view","sView","addEventListener","type","listener","pos","push","removeEventListener","splice","dispatchEvent","event","gType","View","View_1","_super","apply","arguments","React","Component","Path","gOrigin","origin","window","location","pathname","root","match","NodeChoice","props","flow","render","_this","createElement","className","config","onClick","evt","choice","src","ev","choiceType","forceUpdate","ConfigDB","databases","Oracle","driver","url","SQL Server","DB2","Mysql","Infomix","dbOptions","info","dbName","RegisteInfo","ConfigUser","Finish","Stage","stepViews","make","gConfig","previousStyle","gStepIndex","previous","finish","next","NodeChoiceFlow","validate","ConfigDBFlow","save","RegisteInfoFlow","genSyncURL","ConfigUserFlow","genUser","FinishFlow","StageFlow","container","configDatas","subViewFlowHash","stepIndex","sStepIndex","index","href","connTest","Runtime_1","document","querySelector","stage","Wizard","runtime","version"],"mappings":"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","file":"0.1.0.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * 声明哈希表接口规范。\n *\n * @author    姚尧 <yaogaoyu@163.com>\n * @license   GPL-3.0\n * @file      Util/IHashTable.ts\n */\n/**\n * 声明视图状态接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_View/IState.ts\n */\n/// <reference path=\"../../Util/IHashTable.ts\" />\n/**\n * 声明视图属性接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_View/IProps.ts\n */\n/// <reference path=\"../../Util/IHashTable.ts\" />\n/// <reference path=\"../_Runtime/IFlow.ts\" />\n/**\n * 声明视图规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_View/IView.ts\n */\n/// <reference path=\"../../Util/IHashTable.ts\" />\n/// <reference path=\"../../../include/react/react-global.d.ts\" />\n/// <reference path=\"IState.ts\" />\n/// <reference path=\"IProps.ts\" />\n/// <reference path=\"../_Runtime/IFlow.ts\" />\n/**\n * 声明（运行时）事件元信息接口规范。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      Core/_Ev/IEventMetas.ts\n */\n/**\n * 声明（运行时）事件接口规范。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      Core/_Ev/IEvent.ts\n */\n/// <reference path=\"IEventMetas.ts\" />\n/**\n * 声明（运行时）事件监听函数接口规范。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      Core/_Ev/IEventListener.ts\n */\n/// <reference path=\"IEvent.ts\" />\n/**\n * 声明（运行时）事件宿主接口规范。\n *\n * @author    郑煜宇 <yzheng@atfacg.com>\n * @copyright © 2015 Dahao.de\n * @license   GPL-3.0\n * @file      Core/_Ev/IEmittable.ts\n */\n/// <reference path=\"IEventListener.ts\" />\n/**\n * 声明（运行时）业务逻辑流接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_Runtime/IFlow.ts\n */\n/// <reference path=\"../_View/IView.ts\" />\n/// <reference path=\"../_Ev/IEmittable.ts\" />\n/**\n * 声明数组遍历函数接口规范。\n *\n * @author    姚尧 <yaogaoyu@163.com>\n * @license   GPL-3.0\n * @file      Util/IArrayIterator.ts\n */\n/**\n * 声明对象遍历函数接口规范。\n *\n * @author    姚尧 <yaogaoyu@163.com>\n * @license   GPL-3.0\n * @file      Util/IObjectIterator.ts\n */\n/// <reference path=\"IHashTable.ts\" />\n/**\n * 定义数组类工具方法。\n *\n * @author    姚尧 <yaogaoyu@163.com>\n * @license   GPL-3.0\n * @file      Util/_iterator.ts\n */\n/// <reference path=\"IArrayIterator.ts\" />\n/// <reference path=\"IObjectIterator.ts\" />\nvar Util;\n(function (Util) {\n    function each(obj, cb, $this) {\n        $this = $this || {};\n        var ii;\n        if (obj instanceof Array) {\n            if (obj.forEach)\n                return obj.forEach(cb, $this);\n            for (ii = 0; ii < obj.length; ii++)\n                cb.call($this, obj[ii], ii, obj);\n            return;\n        }\n        for (ii in obj)\n            if (obj.hasOwnProperty(ii))\n                cb.call($this, obj[ii], ii, obj);\n    }\n    Util.each = each;\n    function every(obj, cb, $this) {\n        $this = $this || {};\n        var ii;\n        if (obj instanceof Array) {\n            if (obj.every)\n                return obj.every(cb, $this);\n            for (ii = 0; ii < obj.length; ii++)\n                if (!cb.call($this, obj[ii], ii, obj))\n                    return false;\n        }\n        else\n            for (ii in obj)\n                if (obj.hasOwnProperty(ii) && !cb.call($this, obj[ii], ii, obj))\n                    return false;\n        return true;\n    }\n    Util.every = every;\n    function some(obj, cb, $this) {\n        $this = $this || {};\n        var ii;\n        if (obj instanceof Array) {\n            if (obj.some)\n                return obj.some(cb, $this);\n            for (ii = 0; ii < obj.length; ii++)\n                if (cb.call($this, obj[ii], ii, obj))\n                    return true;\n        }\n        else\n            for (ii in obj)\n                if (obj.hasOwnProperty(ii) && cb.call($this, obj[ii], ii, obj))\n                    return true;\n        return false;\n    }\n    Util.some = some;\n    function indexOf(obj, item, offset) {\n        if (offset === void 0) { offset = 0; }\n        var ii;\n        if (obj instanceof Array) {\n            if (obj.indexOf)\n                return obj.indexOf(item, offset);\n            for (ii = offset; ii < obj.length; ii++)\n                if (obj[ii] == item)\n                    return ii;\n        }\n        else\n            for (ii in obj)\n                if (obj.hasOwnProperty(ii) && obj[ii] == item)\n                    return ii;\n        return -1;\n    }\n    Util.indexOf = indexOf;\n    function clone(orig) {\n        if ('object' != typeof orig)\n            return orig;\n        if (orig instanceof Array)\n            return orig.slice(0);\n        var dolly = {};\n        Util.each(orig, function (value, key) {\n            dolly[key] = value;\n        });\n        return dolly;\n    }\n    Util.clone = clone;\n})(Util || (Util = {}));\n/**\n * 定义（运行时）业务逻辑流组件。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Runtime/Flow.ts\n */\n/// <reference path=\"../Core/_Runtime/IFlow.ts\" />\n/// <reference path=\"../Util/_iterator.ts\" />\nvar Runtime;\n(function (Runtime) {\n    var Flow = (function () {\n        /**\n         * 构造函数。\n         */\n        function Flow() {\n            this.listeners = {};\n        }\n        /**\n         * 获取绑定视图。\n         */\n        Flow.prototype.gView = function () {\n            return this.view;\n        };\n        /**\n         * 设置绑定视图。\n         */\n        Flow.prototype.sView = function (view) {\n            this.view = view;\n            return this;\n        };\n        /**\n         * 新增事件监听。\n         */\n        Flow.prototype.addEventListener = function (type, listener) {\n            this.listeners[type] = this.listeners[type] || [];\n            var pos = Util.indexOf(this.listeners[type], listener);\n            if (-1 == pos)\n                this.listeners[type].push(listener);\n            return this;\n        };\n        /**\n         * 取消事件监听。\n         */\n        Flow.prototype.removeEventListener = function (type, listener) {\n            this.listeners[type] = this.listeners[type] || [];\n            var pos = Util.indexOf(this.listeners[type], listener);\n            if (-1 != pos)\n                this.listeners[type].splice(pos, 1);\n            return this;\n        };\n        /**\n         * 发生事件。\n         */\n        Flow.prototype.dispatchEvent = function (event) {\n            Util.each(this.listeners[event.gType()] || [], function (listener) {\n                listener(event);\n            });\n            return this;\n        };\n        return Flow;\n    }());\n    Runtime.Flow = Flow;\n})(Runtime || (Runtime = {}));\n/**\n * 定义视图抽象组件。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      View/View.ts\n */\n/// <reference path=\"../../include/tsd.d.ts\" />\n/// <reference path=\"../Core/_View/IView.ts\" />\nvar View;\n(function (View_1) {\n    var View = (function (_super) {\n        __extends(View, _super);\n        function View() {\n            _super.apply(this, arguments);\n        }\n        return View;\n    }(React.Component));\n    View_1.View = View;\n})(View || (View = {}));\n/**\n * 定义Path信息组件。\n *\n * @author    姚尧 <yaogaoyu@163.com>\n * @license   GPL-3.0\n * @file      Util/Path.ts\n */\nvar Util;\n(function (Util) {\n    var Path;\n    (function (Path) {\n        /**\n         * 获取指定部署根目录。\n         */\n        function gOrigin() {\n            var origin = window.location.origin;\n            var pathname = window.location.pathname;\n            var root = pathname.match(/.*\\//)[0];\n            return origin + root;\n        }\n        Path.gOrigin = gOrigin;\n    })(Path = Util.Path || (Util.Path = {}));\n})(Util || (Util = {}));\n/**\n * 配置向导-节点类型选择主视图。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      View/NodeChoice.ts\n */\n/// <reference path=\"../View.ts\" />\n/// <reference path=\"../../Util/Path.ts\" />\nvar View;\n(function (View) {\n    var NodeChoice = (function (_super) {\n        __extends(NodeChoice, _super);\n        function NodeChoice(props) {\n            _super.call(this, props);\n            this.origin = Util.Path.gOrigin();\n            this.props.flow.sView(this);\n        }\n        NodeChoice.prototype.render = function () {\n            var _this = this;\n            return React.createElement(\"div\", {className: 'wrap'}, React.createElement(\"div\", {className: 'title'}, \"步骤一：节点类型选择\"), React.createElement(\"div\", {className: 'desc'}, \"选择一个进行同步服务的节点类型\"), React.createElement(\"div\", {className: 'formWrap'}, React.createElement(\"div\", {className: 'nodeType'}, React.createElement(\"span\", {className: 'inline type'}, React.createElement(\"span\", {className: 'ibtn typeBtn' + (this.props.config['type'] == 'master' ? ' selected' : ''), onClick: function (evt) { _this.choice(evt, 'master'); }}, React.createElement(\"img\", {src: this.origin + 's/images/node.png'}))), React.createElement(\"span\", {className: 'inline type typeName'}, \"Master\"), React.createElement(\"span\", {className: 'inline type desc'}, \"主库节点，每个注册到此主节点上的从库节点将使用主库节点提供的服务进行数据同步。\")), React.createElement(\"div\", {className: 'nodeType'}, React.createElement(\"span\", {className: 'inline type'}, React.createElement(\"span\", {className: 'ibtn typeBtn' + (this.props.config['type'] == 'slaver' ? ' selected' : ''), onClick: function (evt) { _this.choice(evt, 'slaver'); }}, React.createElement(\"img\", {src: this.origin + 's/images/node.png'}))), React.createElement(\"span\", {className: 'inline type typeName'}, \"Slaver\"), React.createElement(\"span\", {className: 'inline type desc'}, \"从库节点，连接主库节点，与所有注册在主库节点上的从库节点进行数据同步。\"))));\n        };\n        NodeChoice.prototype.choice = function (ev, type) {\n            if (!type)\n                return;\n            this.props.flow.choiceType(type);\n            this.forceUpdate();\n            // 发送事件到stage进行下一个步骤\n        };\n        return NodeChoice;\n    }(View.View));\n    View.NodeChoice = NodeChoice;\n})(View || (View = {}));\n/**\n * 配置向导-数据库配置主视图。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      View/ConfigDB.ts\n */\n/// <reference path=\"../View.ts\" />\nvar View;\n(function (View) {\n    var ConfigDB = (function (_super) {\n        __extends(ConfigDB, _super);\n        function ConfigDB(props) {\n            var _this = this;\n            _super.call(this, props);\n            this.databases = {\n                'Oracle': { 'driver': '', 'url': 'jdbc:oracle:thin:@127.0.0.1:1521:databasename' },\n                'SQL Server': { 'driver': '', 'url': 'jdbc:jtds:sqlserver://hostname/databasename;useCursors=true;bufferMaxMemory=10240;lobBuffer=5242880;socketTimeout=300;appName=syncdb' },\n                'DB2': { 'driver': '', 'url': 'jdbc:db2://hostname:50000/databasename' },\n                'Mysql': { 'driver': '', 'url': 'jdbc:mysql://hostname/databasename?tinyInt1isBit=false&zeroDateTimeBehavior=convertToNull' },\n                'Infomix': { 'driver': '', 'url': 'jdbc:informix-sqli://hostname:9088/databasename:INFORMIXSERVER=ol_ids_1150_1' }\n            };\n            this.dbOptions = [];\n            this.props.flow.sView(this);\n            Util.each(this.databases, function (info, dbName) {\n                _this.dbOptions.push(React.createElement(\"option\", {value: dbName}, dbName));\n            });\n        }\n        ConfigDB.prototype.render = function () {\n            return React.createElement(\"div\", {className: 'wrap'}, React.createElement(\"div\", {className: 'title'}, \"步骤二：数据库连接配置\"), React.createElement(\"div\", {className: 'desc'}, \"数据库配置完成后请先测试连接，测试成功才能进行下一步。\"), React.createElement(\"div\", {className: 'formWrap'}, React.createElement(\"div\", {className: 'row'}, React.createElement(\"div\", {className: 'title'}, \"数据库\"), React.createElement(\"div\", {className: 'input'}, React.createElement(\"select\", {className: 'sel dbType'}, React.createElement(\"option\", {value: \"-1\"}, \"请选择数据库\"), this.dbOptions))), React.createElement(\"div\", {className: 'row'}, React.createElement(\"div\", {className: 'title'}, \"数据库连接\"), React.createElement(\"div\", {className: 'input'}, React.createElement(\"input\", {type: 'text', className: 'text dbInput'}))), React.createElement(\"div\", {className: 'row'}, React.createElement(\"div\", {className: 'title'}, \"用户名\"), React.createElement(\"div\", {className: 'input'}, React.createElement(\"input\", {type: 'text', className: 'text dbUser'}))), React.createElement(\"div\", {className: 'row'}, React.createElement(\"div\", {className: 'title'}, \"密码\"), React.createElement(\"div\", {className: 'input'}, React.createElement(\"input\", {type: 'password', className: 'text dbPsw'})))));\n        };\n        return ConfigDB;\n    }(View.View));\n    View.ConfigDB = ConfigDB;\n})(View || (View = {}));\n/**\n * 配置向导-节点注册主视图。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      View/RegisteInfo.ts\n */\n/// <reference path=\"../View.ts\" />\nvar View;\n(function (View) {\n    var RegisteInfo = (function (_super) {\n        __extends(RegisteInfo, _super);\n        function RegisteInfo(props) {\n            _super.call(this, props);\n            this.props.flow.sView(this);\n        }\n        RegisteInfo.prototype.render = function () {\n            return React.createElement(\"div\", {className: 'wrap'}, React.createElement(\"div\", {className: 'title'}, \"步骤三：节点注册信息\"), this.props['type'] == 'master' ?\n                React.createElement(\"div\", {className: 'desc'}, \"连接到此主库节点的从库节点将使用此URL进行节点注册\") :\n                React.createElement(\"div\", {className: 'desc'}, \"请填写主库节点的注册URL\"), React.createElement(\"div\", {className: 'formWrap'}, this.props.config['type'] == 'master' ?\n                React.createElement(\"div\", {className: 'row'}, React.createElement(\"div\", {className: 'title'}, \"连接到此主库节点的从库节点将使用此URL进行节点注册\")) :\n                React.createElement(\"div\", {className: 'row'}, React.createElement(\"div\", {className: 'title'}, \"注册主库的URL\"), React.createElement(\"div\", {className: 'input'}, React.createElement(\"input\", {type: 'text', className: 'text url'})))));\n        };\n        return RegisteInfo;\n    }(View.View));\n    View.RegisteInfo = RegisteInfo;\n})(View || (View = {}));\n/**\n * 配置向导-设置用户向导主视图。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      View/ConfigUser.ts\n */\n/// <reference path=\"../View.ts\" />\nvar View;\n(function (View) {\n    var ConfigUser = (function (_super) {\n        __extends(ConfigUser, _super);\n        function ConfigUser(props) {\n            _super.call(this, props);\n            this.props.flow.sView(this);\n        }\n        ConfigUser.prototype.render = function () {\n            return React.createElement(\"div\", {className: 'wrap'}, React.createElement(\"div\", {className: 'title'}, \"步骤四：注册登录用户\"), React.createElement(\"div\", {className: 'desc'}, \"注册一个用户登录到本系统\"), React.createElement(\"div\", {className: 'formWrap'}, React.createElement(\"div\", {className: 'row'}, React.createElement(\"div\", {className: 'title'}, \"用户名\"), React.createElement(\"div\", {className: 'input'}, React.createElement(\"input\", {type: 'text', className: 'userName'}))), React.createElement(\"div\", {className: 'row'}, React.createElement(\"div\", {className: 'title'}, \"密码\"), React.createElement(\"div\", {className: 'input'}, React.createElement(\"input\", {type: 'password', className: 'userPsw'})))));\n        };\n        return ConfigUser;\n    }(View.View));\n    View.ConfigUser = ConfigUser;\n})(View || (View = {}));\n/**\n * 配置向导-完成向导主视图。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      View/Finish.ts\n */\n/// <reference path=\"../View.ts\" />\nvar View;\n(function (View) {\n    var Finish = (function (_super) {\n        __extends(Finish, _super);\n        function Finish(props) {\n            _super.call(this, props);\n            this.props.flow.sView(this);\n        }\n        Finish.prototype.render = function () {\n            return React.createElement(\"div\", {className: 'wrap'}, React.createElement(\"div\", {className: 'title'}, \"步骤五：完成\"), React.createElement(\"div\", {className: 'desc'}, \"请使用刚才设置的用户名和密码登录，点击完成跳转到登录页面。\"));\n        };\n        return Finish;\n    }(View.View));\n    View.Finish = Finish;\n})(View || (View = {}));\n/**\n * 配置向导引导主视图。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      View/Stage.ts\n */\n/// <reference path=\"View.ts\" />\n/// <reference path=\"_Steps/NodeChoice.tsx\" />\n/// <reference path=\"_Steps/ConfigDB.tsx\" />\n/// <reference path=\"_Steps/RegisteInfo.tsx\" />\n/// <reference path=\"_Steps/ConfigUser.tsx\" />\n/// <reference path=\"_Steps/Finish.tsx\" />\nvar View;\n(function (View) {\n    var Stage = (function (_super) {\n        __extends(Stage, _super);\n        function Stage(props) {\n            _super.call(this, props);\n            this.props.flow.sView(this);\n            var flow = this.props.flow;\n            this.stepViews = [\n                React.createElement(View.NodeChoice, {flow: flow.make('nodeChoice'), config: flow.gConfig()}),\n                React.createElement(View.ConfigDB, {flow: flow.make('configDB'), config: flow.gConfig()}),\n                React.createElement(View.RegisteInfo, {flow: flow.make('registeInfo'), config: flow.gConfig()}),\n                React.createElement(View.ConfigUser, {flow: flow.make('configUser'), config: flow.gConfig()}),\n                React.createElement(View.Finish, {flow: flow.make('finish'), config: flow.gConfig()})\n            ];\n        }\n        Stage.prototype.render = function () {\n            var flow = this.props.flow;\n            var previousStyle = 'btn stageBtn' + (flow.gStepIndex() <= 0 ? ' disabled' : '');\n            return React.createElement(\"div\", {className: 'stage'}, React.createElement(\"div\", {className: 'phase top'}, React.createElement(\"span\", {className: 'title'}, \"同步工具配置向导\")), React.createElement(\"div\", {className: 'phase stageWrap'}, this.stepViews[flow.gStepIndex()]), React.createElement(\"div\", {className: 'phase bottom'}, flow.gStepIndex() == 1 ?\n                React.createElement(\"span\", {className: 'left btnWrap'}, React.createElement(\"span\", {className: 'btn stageBtn'}, React.createElement(\"p\", null, \"测试连接\"))) :\n                '', React.createElement(\"span\", {className: 'right btnWrap'}, React.createElement(\"span\", {className: previousStyle, onClick: function (ev) { flow.previous(ev); }}, React.createElement(\"p\", null, \"上一步\")), flow.gStepIndex() >= 4 ?\n                React.createElement(\"span\", {className: 'btn stageBtn', onClick: function (ev) { flow.finish(ev); }}, React.createElement(\"p\", null, \"完成\")) :\n                React.createElement(\"span\", {className: 'btn stageBtn', onClick: function (ev) { flow.next(ev); }}, React.createElement(\"p\", null, \"下一步\")))));\n        };\n        return Stage;\n    }(View.View));\n    View.Stage = Stage;\n})(View || (View = {}));\n/**\n * 声明引导程序业务流接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_Runtime/IStageFlow.ts\n */\n/// <reference path=\"IFlow.ts\" />\n/// <reference path=\"../_View/IView.ts\" />\n/**\n * 声明配置完成完成业务流接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_Runtime/IFinishFlow.ts\n */\n/// <reference path=\"IFlow.ts\" />\n/// <reference path=\"../_View/IView.ts\" />\n/**\n * 声明节点类型选择业务流接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_Runtime/INodeChoiceFlow.ts\n */\n/// <reference path=\"IStepFlow.ts\" />\n/// <reference path=\"../_View/IView.ts\" />\n/**\n * 节点类型选择实体。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Runtime/NodeChoiceFlow.ts\n */\n/// <reference path=\"../Flow.ts\" />\n/// <reference path=\"../../Core/_Runtime/INodeChoiceFlow.ts\" />\nvar Runtime;\n(function (Runtime) {\n    var NodeChoiceFlow = (function (_super) {\n        __extends(NodeChoiceFlow, _super);\n        /**\n         * 构造函数。\n         */\n        function NodeChoiceFlow(config) {\n            _super.call(this);\n            this.config = config;\n        }\n        /**\n         * 节点类型选择业务\n         */\n        NodeChoiceFlow.prototype.choiceType = function (type) {\n            this.config['type'] = type;\n        };\n        /**\n         * 步骤验证\n         */\n        NodeChoiceFlow.prototype.validate = function () {\n            return true;\n        };\n        return NodeChoiceFlow;\n    }(Runtime.Flow));\n    Runtime.NodeChoiceFlow = NodeChoiceFlow;\n})(Runtime || (Runtime = {}));\n/**\n * 声明数据库配置业务流接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_Runtime/IConfigDBFlow.ts\n */\n/// <reference path=\"IStepFlow.ts\" />\n/// <reference path=\"../_View/IView.ts\" />\n/**\n * 数据库配置实体。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Runtime/ConfigDBFlow.ts\n */\n/// <reference path=\"../Flow.ts\" />\n/// <reference path=\"../../Core/_Runtime/IConfigDBFlow.ts\" />\nvar Runtime;\n(function (Runtime) {\n    var ConfigDBFlow = (function (_super) {\n        __extends(ConfigDBFlow, _super);\n        /**\n         * 构造函数。\n         */\n        function ConfigDBFlow(config) {\n            _super.call(this);\n        }\n        /**\n         * 处理数据库配置业务\n         */\n        ConfigDBFlow.prototype.save = function (config) {\n            //\n        };\n        /**\n         * 步骤验证\n         */\n        ConfigDBFlow.prototype.validate = function () {\n            return true;\n        };\n        return ConfigDBFlow;\n    }(Runtime.Flow));\n    Runtime.ConfigDBFlow = ConfigDBFlow;\n})(Runtime || (Runtime = {}));\n/**\n * 声明节点注册业务流接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_Runtime/IRegisteInfoFlow.ts\n */\n/// <reference path=\"IStepFlow.ts\" />\n/// <reference path=\"../_View/IView.ts\" />\n/**\n * 节点注册信息实体。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Runtime/RegisteInfoFlow.ts\n */\n/// <reference path=\"../Flow.ts\" />\n/// <reference path=\"../../Core/_Runtime/IRegisteInfoFlow.ts\" />\nvar Runtime;\n(function (Runtime) {\n    var RegisteInfoFlow = (function (_super) {\n        __extends(RegisteInfoFlow, _super);\n        /**\n         * 构造函数。\n         */\n        function RegisteInfoFlow(config) {\n            _super.call(this);\n        }\n        /**\n         * 保存从端设置的同步接口URL\n         */\n        RegisteInfoFlow.prototype.save = function (type) {\n            //\n        };\n        /**\n         * 生成主端的同步接口URL\n         */\n        RegisteInfoFlow.prototype.genSyncURL = function (type) {\n            //\n        };\n        /**\n         * 步骤验证\n         */\n        RegisteInfoFlow.prototype.validate = function () {\n            return true;\n        };\n        return RegisteInfoFlow;\n    }(Runtime.Flow));\n    Runtime.RegisteInfoFlow = RegisteInfoFlow;\n})(Runtime || (Runtime = {}));\n/**\n * 声明保存登录用户业务流接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_Runtime/IConfigUserFlow.ts\n */\n/// <reference path=\"IStepFlow.ts\" />\n/// <reference path=\"../_View/IView.ts\" />\n/**\n * 生成用户业务流。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Runtime/ConfigUserFlow.ts\n */\n/// <reference path=\"../Flow.ts\" />\n/// <reference path=\"../../Core/_Runtime/IConfigUserFlow.ts\" />\nvar Runtime;\n(function (Runtime) {\n    var ConfigUserFlow = (function (_super) {\n        __extends(ConfigUserFlow, _super);\n        /**\n         * 构造函数。\n         */\n        function ConfigUserFlow(config) {\n            _super.call(this);\n        }\n        /**\n         * 生成用户\n         */\n        ConfigUserFlow.prototype.genUser = function () {\n            //\n        };\n        /**\n         * 步骤验证\n         */\n        ConfigUserFlow.prototype.validate = function () {\n            return true;\n        };\n        return ConfigUserFlow;\n    }(Runtime.Flow));\n    Runtime.ConfigUserFlow = ConfigUserFlow;\n})(Runtime || (Runtime = {}));\n/**\n * 声明配置完成完成业务流接口规范。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Core/_Runtime/IFinishFlow.ts\n */\n/// <reference path=\"IStepFlow.ts\" />\n/// <reference path=\"../_View/IView.ts\" />\n/**\n * 配置完成实体。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Runtime/FinishFlow.ts\n */\n/// <reference path=\"../Flow.ts\" />\n/// <reference path=\"../../Core/_Runtime/IFinishFlow.ts\" />\nvar Runtime;\n(function (Runtime) {\n    var FinishFlow = (function (_super) {\n        __extends(FinishFlow, _super);\n        /**\n         * 构造函数。\n         */\n        function FinishFlow(config) {\n            _super.call(this);\n        }\n        /**\n         * 处理配置完成业务\n         */\n        FinishFlow.prototype.finish = function (config) {\n            //\n        };\n        /**\n         * 步骤验证\n         */\n        FinishFlow.prototype.validate = function () {\n            return true;\n        };\n        return FinishFlow;\n    }(Runtime.Flow));\n    Runtime.FinishFlow = FinishFlow;\n})(Runtime || (Runtime = {}));\n/**\n * 向导业务流实体。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Runtime/Stage.ts\n */\n/// <reference path=\"Flow.ts\" />\n/// <reference path=\"../View/Stage.tsx\" />\n/// <reference path=\"../Core/_Runtime/IStageFlow.ts\" />\n/// <reference path=\"_Steps/NodeChoiceFlow.ts\" />\n/// <reference path=\"_Steps/ConfigDBFlow.ts\" />\n/// <reference path=\"_Steps/RegisteInfoFlow.ts\" />\n/// <reference path=\"_Steps/ConfigUserFlow.ts\" />\n/// <reference path=\"_Steps/FinishFlow.ts\" />\nvar Runtime;\n(function (Runtime) {\n    var StageFlow = (function (_super) {\n        __extends(StageFlow, _super);\n        /**\n         * 构造函数。\n         */\n        function StageFlow(container) {\n            _super.call(this);\n            // private curStep: number = 0;\n            // private steps: View.View[] = [];\n            this.configDatas = {};\n            /**\n             * 子视图对应业务流实体哈希表\n             */\n            this.subViewFlowHash = {};\n            /**\n             * 当前所在步骤的索引号\n             */\n            this.stepIndex = 0;\n            this.view = React.render(React.createElement(View.Stage, {flow: this}), container);\n        }\n        /**\n         * 取得配置数据。\n         */\n        StageFlow.prototype.gConfig = function () {\n            return this.configDatas;\n        };\n        /**\n         * 绑定子视图与Flow。\n         */\n        StageFlow.prototype.make = function (type) {\n            if (this.subViewFlowHash && type in this.subViewFlowHash)\n                return this.subViewFlowHash[type];\n            var flow;\n            switch (type) {\n                case 'nodeChoice':\n                    flow = new Runtime.NodeChoiceFlow(this.configDatas);\n                    break;\n                case 'configDB':\n                    flow = new Runtime.ConfigDBFlow(this.configDatas);\n                    break;\n                case 'registeInfo':\n                    flow = new Runtime.RegisteInfoFlow(this.configDatas);\n                    break;\n                case 'configUser':\n                    flow = new Runtime.ConfigUserFlow(this.configDatas);\n                    break;\n                case 'finish':\n                    flow = new Runtime.FinishFlow(this.configDatas);\n                    break;\n            }\n            this.subViewFlowHash[type] = flow;\n            return flow;\n        };\n        /**\n         * 取得当前步骤索引号。\n         * 索引号从0开始\n         */\n        StageFlow.prototype.gStepIndex = function () {\n            return this.stepIndex;\n        };\n        /**\n         * 设置当前步骤索引号。\n         * 索引号从0开始\n         */\n        StageFlow.prototype.sStepIndex = function (index) {\n            if (index < 0)\n                this.stepIndex = 0;\n        };\n        /**\n         * 上一步。\n         */\n        StageFlow.prototype.previous = function (ev) {\n            if (this.stepIndex <= 0)\n                return;\n            this.stepIndex -= 1;\n            this.view.forceUpdate();\n        };\n        /**\n         * 下一步。\n         */\n        StageFlow.prototype.next = function (ev) {\n            this.stepIndex += 1;\n            this.view.forceUpdate();\n        };\n        /**\n         * 完成。\n         */\n        StageFlow.prototype.finish = function (ev) {\n            window.location.href = Util.Path.gOrigin() + 'login.htm';\n        };\n        /**\n         * 测试。\n         */\n        StageFlow.prototype.connTest = function () {\n            //\n        };\n        return StageFlow;\n    }(Runtime.Flow));\n    Runtime.StageFlow = StageFlow;\n})(Runtime || (Runtime = {}));\n/**\n * 向导运行时实体。\n *\n * @author    姚尧 <yaogaoyu@qq.com>\n * @file      Runtime/Runtime.ts\n */\n/// <reference path=\"StageFlow.tsx\" />\nvar Runtime;\n(function (Runtime_1) {\n    var Runtime = (function () {\n        /**\n         * 构造函数。\n         */\n        function Runtime() {\n            var container = document.querySelector('.wizard');\n            this.stage = new Runtime_1.StageFlow(container);\n        }\n        return Runtime;\n    }());\n    Runtime_1.Runtime = Runtime;\n})(Runtime || (Runtime = {}));\n/**\n * 同步工具配置向导入口类。\n *\n * @author    姚尧 <yaogaoyu@163.com>\n * @file      Wizard.ts\n */\n/// <reference path=\"Runtime/Runtime.ts\" />\nvar Wizard = (function () {\n    /**\n     * 构造函数。\n     */\n    function Wizard() {\n        this.runtime = new Runtime.Runtime();\n    }\n    Wizard.version = \"0.1.0\";\n    return Wizard;\n}());\nmodule.exports=Wizard;\n//# sourceMappingURL=wizard.js.map\n"],"sourceRoot":"/source/"}