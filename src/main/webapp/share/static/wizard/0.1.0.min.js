require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"wizard":[function(require,module,exports){
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * 声明哈希表接口规范。
 *
 * @author    姚尧 <yaogaoyu@163.com>
 * @license   GPL-3.0
 * @file      Util/IHashTable.ts
 */
/**
 * 声明视图状态接口规范。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Core/_View/IState.ts
 */
/// <reference path="../../Util/IHashTable.ts" />
/**
 * 声明视图属性接口规范。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Core/_View/IProps.ts
 */
/// <reference path="../../Util/IHashTable.ts" />
/// <reference path="../_Runtime/IFlow.ts" />
/**
 * 声明视图规范。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Core/_View/IView.ts
 */
/// <reference path="../../Util/IHashTable.ts" />
/// <reference path="../../../include/react/react-global.d.ts" />
/// <reference path="IState.ts" />
/// <reference path="IProps.ts" />
/// <reference path="../_Runtime/IFlow.ts" />
/**
 * 声明（运行时）事件元信息接口规范。
 *
 * @author    郑煜宇 <yzheng@atfacg.com>
 * @copyright © 2015 Dahao.de
 * @license   GPL-3.0
 * @file      Core/_Ev/IEventMetas.ts
 */
/**
 * 声明（运行时）事件接口规范。
 *
 * @author    郑煜宇 <yzheng@atfacg.com>
 * @copyright © 2015 Dahao.de
 * @license   GPL-3.0
 * @file      Core/_Ev/IEvent.ts
 */
/// <reference path="IEventMetas.ts" />
/**
 * 声明（运行时）事件监听函数接口规范。
 *
 * @author    郑煜宇 <yzheng@atfacg.com>
 * @copyright © 2015 Dahao.de
 * @license   GPL-3.0
 * @file      Core/_Ev/IEventListener.ts
 */
/// <reference path="IEvent.ts" />
/**
 * 声明（运行时）事件宿主接口规范。
 *
 * @author    郑煜宇 <yzheng@atfacg.com>
 * @copyright © 2015 Dahao.de
 * @license   GPL-3.0
 * @file      Core/_Ev/IEmittable.ts
 */
/// <reference path="IEventListener.ts" />
/**
 * 声明（运行时）业务逻辑流接口规范。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Core/_Runtime/IFlow.ts
 */
/// <reference path="../_View/IView.ts" />
/// <reference path="../_Ev/IEmittable.ts" />
/**
 * 声明数组遍历函数接口规范。
 *
 * @author    姚尧 <yaogaoyu@163.com>
 * @license   GPL-3.0
 * @file      Util/IArrayIterator.ts
 */
/**
 * 声明对象遍历函数接口规范。
 *
 * @author    姚尧 <yaogaoyu@163.com>
 * @license   GPL-3.0
 * @file      Util/IObjectIterator.ts
 */
/// <reference path="IHashTable.ts" />
/**
 * 定义数组类工具方法。
 *
 * @author    姚尧 <yaogaoyu@163.com>
 * @license   GPL-3.0
 * @file      Util/_iterator.ts
 */
/// <reference path="IArrayIterator.ts" />
/// <reference path="IObjectIterator.ts" />
var Util;
(function (Util) {
    function each(obj, cb, $this) {
        $this = $this || {};
        var ii;
        if (obj instanceof Array) {
            if (obj.forEach)
                return obj.forEach(cb, $this);
            for (ii = 0; ii < obj.length; ii++)
                cb.call($this, obj[ii], ii, obj);
            return;
        }
        for (ii in obj)
            if (obj.hasOwnProperty(ii))
                cb.call($this, obj[ii], ii, obj);
    }
    Util.each = each;
    function every(obj, cb, $this) {
        $this = $this || {};
        var ii;
        if (obj instanceof Array) {
            if (obj.every)
                return obj.every(cb, $this);
            for (ii = 0; ii < obj.length; ii++)
                if (!cb.call($this, obj[ii], ii, obj))
                    return false;
        }
        else
            for (ii in obj)
                if (obj.hasOwnProperty(ii) && !cb.call($this, obj[ii], ii, obj))
                    return false;
        return true;
    }
    Util.every = every;
    function some(obj, cb, $this) {
        $this = $this || {};
        var ii;
        if (obj instanceof Array) {
            if (obj.some)
                return obj.some(cb, $this);
            for (ii = 0; ii < obj.length; ii++)
                if (cb.call($this, obj[ii], ii, obj))
                    return true;
        }
        else
            for (ii in obj)
                if (obj.hasOwnProperty(ii) && cb.call($this, obj[ii], ii, obj))
                    return true;
        return false;
    }
    Util.some = some;
    function indexOf(obj, item, offset) {
        if (offset === void 0) { offset = 0; }
        var ii;
        if (obj instanceof Array) {
            if (obj.indexOf)
                return obj.indexOf(item, offset);
            for (ii = offset; ii < obj.length; ii++)
                if (obj[ii] == item)
                    return ii;
        }
        else
            for (ii in obj)
                if (obj.hasOwnProperty(ii) && obj[ii] == item)
                    return ii;
        return -1;
    }
    Util.indexOf = indexOf;
    function clone(orig) {
        if ('object' != typeof orig)
            return orig;
        if (orig instanceof Array)
            return orig.slice(0);
        var dolly = {};
        Util.each(orig, function (value, key) {
            dolly[key] = value;
        });
        return dolly;
    }
    Util.clone = clone;
})(Util || (Util = {}));
/**
 * 定义（运行时）业务逻辑流组件。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Runtime/Flow.ts
 */
/// <reference path="../Core/_Runtime/IFlow.ts" />
/// <reference path="../Util/_iterator.ts" />
var Runtime;
(function (Runtime) {
    var Flow = (function () {
        /**
         * 构造函数。
         */
        function Flow() {
            this.listeners = {};
        }
        /**
         * 获取绑定视图。
         */
        Flow.prototype.gView = function () {
            return this.view;
        };
        /**
         * 设置绑定视图。
         */
        Flow.prototype.sView = function (view) {
            this.view = view;
            return this;
        };
        /**
         * 新增事件监听。
         */
        Flow.prototype.addEventListener = function (type, listener) {
            this.listeners[type] = this.listeners[type] || [];
            var pos = Util.indexOf(this.listeners[type], listener);
            if (-1 == pos)
                this.listeners[type].push(listener);
            return this;
        };
        /**
         * 取消事件监听。
         */
        Flow.prototype.removeEventListener = function (type, listener) {
            this.listeners[type] = this.listeners[type] || [];
            var pos = Util.indexOf(this.listeners[type], listener);
            if (-1 != pos)
                this.listeners[type].splice(pos, 1);
            return this;
        };
        /**
         * 发生事件。
         */
        Flow.prototype.dispatchEvent = function (event) {
            Util.each(this.listeners[event.gType()] || [], function (listener) {
                listener(event);
            });
            return this;
        };
        return Flow;
    }());
    Runtime.Flow = Flow;
})(Runtime || (Runtime = {}));
/**
 * 定义视图抽象组件。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      View/View.ts
 */
/// <reference path="../../include/tsd.d.ts" />
/// <reference path="../Core/_View/IView.ts" />
var View;
(function (View_1) {
    var View = (function (_super) {
        __extends(View, _super);
        function View() {
            _super.apply(this, arguments);
        }
        return View;
    }(React.Component));
    View_1.View = View;
})(View || (View = {}));
/**
 * 定义Path信息组件。
 *
 * @author    姚尧 <yaogaoyu@163.com>
 * @license   GPL-3.0
 * @file      Util/Path.ts
 */
var Util;
(function (Util) {
    var Path;
    (function (Path) {
        /**
         * 获取指定部署根目录。
         */
        function gOrigin() {
            var origin = window.location.origin;
            var pathname = window.location.pathname;
            var root = pathname.match(/.*\//)[0];
            return origin + root;
        }
        Path.gOrigin = gOrigin;
    })(Path = Util.Path || (Util.Path = {}));
})(Util || (Util = {}));
/**
 * 配置向导-节点类型选择主视图。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      View/NodeChoice.ts
 */
/// <reference path="../View.ts" />
/// <reference path="../../Util/Path.ts" />
var View;
(function (View) {
    var NodeChoice = (function (_super) {
        __extends(NodeChoice, _super);
        function NodeChoice(props) {
            _super.call(this, props);
            this.origin = Util.Path.gOrigin();
            this.props.flow.sView(this);
        }
        NodeChoice.prototype.render = function () {
            var _this = this;
            return React.createElement("div", {className: 'wrap'}, React.createElement("div", {className: 'title'}, "步骤一：节点类型选择"), React.createElement("div", {className: 'desc'}, "选择一个进行同步服务的节点类型"), React.createElement("div", {className: 'formWrap'}, React.createElement("div", {className: 'nodeType'}, React.createElement("span", {className: 'inline type'}, React.createElement("span", {className: 'ibtn typeBtn' + (this.props.config['type'] == 'master' ? ' selected' : ''), onClick: function (evt) { _this.choice(evt, 'master'); }}, React.createElement("img", {src: this.origin + 's/images/node.png'}))), React.createElement("span", {className: 'inline type typeName'}, "Master"), React.createElement("span", {className: 'inline type desc'}, "主库节点，每个注册到此主节点上的从库节点将使用主库节点提供的服务进行数据同步。")), React.createElement("div", {className: 'nodeType'}, React.createElement("span", {className: 'inline type'}, React.createElement("span", {className: 'ibtn typeBtn' + (this.props.config['type'] == 'slaver' ? ' selected' : ''), onClick: function (evt) { _this.choice(evt, 'slaver'); }}, React.createElement("img", {src: this.origin + 's/images/node.png'}))), React.createElement("span", {className: 'inline type typeName'}, "Slaver"), React.createElement("span", {className: 'inline type desc'}, "从库节点，连接主库节点，与所有注册在主库节点上的从库节点进行数据同步。"))));
        };
        NodeChoice.prototype.choice = function (ev, type) {
            if (!type)
                return;
            this.props.flow.choiceType(type);
            this.forceUpdate();
            // 发送事件到stage进行下一个步骤
        };
        return NodeChoice;
    }(View.View));
    View.NodeChoice = NodeChoice;
})(View || (View = {}));
/**
 * 配置向导-数据库配置主视图。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      View/ConfigDB.ts
 */
/// <reference path="../View.ts" />
var View;
(function (View) {
    var ConfigDB = (function (_super) {
        __extends(ConfigDB, _super);
        function ConfigDB(props) {
            var _this = this;
            _super.call(this, props);
            this.dbOptions = [];
            this.props.flow.sView(this);
            Util.each(this.props.flow.getDatabases(), function (info, dbName) {
                _this.dbOptions.push(React.createElement("option", {value: dbName}, dbName));
            });
        }
        ConfigDB.prototype.render = function () {
            var _this = this;
            return React.createElement("div", {className: 'wrap'}, React.createElement("div", {className: 'title'}, "步骤二：数据库连接配置"), React.createElement("div", {className: 'desc'}, "数据库配置完成后请先测试连接，测试成功才能进行下一步。"), React.createElement("div", {className: 'formWrap'}, React.createElement("div", {className: 'row'}, React.createElement("div", {className: 'title'}, "数据库"), React.createElement("div", {className: 'input'}, React.createElement("select", {className: 'sel dbType', onChange: function (ev) { _this.dbTypeChange(ev); }, value: this.props.config["db.type"]}, React.createElement("option", {value: "-1"}, "请选择数据库"), this.dbOptions))), React.createElement("div", {className: 'row'}, React.createElement("div", {className: 'title'}, "数据库连接"), React.createElement("div", {className: 'input'}, React.createElement("input", {type: 'text', className: 'text dbInput', value: this.props.config["db.url"], onChange: function (ev) { _this.props.config["db.url"] = event.target.value; _this.forceUpdate(); }}))), React.createElement("div", {className: 'row'}, React.createElement("div", {className: 'title'}, "用户名"), React.createElement("div", {className: 'input'}, React.createElement("input", {type: 'text', className: 'text dbUser', value: this.props.config["db.user"], onChange: function (ev) { _this.props.config["db.user"] = event.target.value; _this.forceUpdate(); }}))), React.createElement("div", {className: 'row'}, React.createElement("div", {className: 'title'}, "密码"), React.createElement("div", {className: 'input'}, React.createElement("input", {type: 'password', className: 'text dbPsw', value: this.props.config["db.psw"], onChange: function (ev) { _this.props.config["db.psw"] = event.target.value; _this.forceUpdate(); }})))));
        };
        ConfigDB.prototype.dbTypeChange = function (ev) {
            var dbType = event.target.value;
            if (dbType == "-1") {
                this.props.config["db.type"] = "";
                this.props.config["db.driver"] = "";
                this.props.config["db.url"] = "";
            }
            else {
                this.props.config["db.type"] = dbType;
                this.props.config["db.driver"] = this.props.flow.getDatabases()[dbType]["driver"];
                this.props.config["db.url"] = this.props.flow.getDatabases()[dbType]["url"];
            }
            this.props.config["db.user"] = "";
            this.props.config["db.psw"] = "";
            this.forceUpdate();
        };
        return ConfigDB;
    }(View.View));
    View.ConfigDB = ConfigDB;
})(View || (View = {}));
/**
 * 配置向导-节点注册主视图。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      View/RegisteInfo.ts
 */
/// <reference path="../View.ts" />
var View;
(function (View) {
    var RegisteInfo = (function (_super) {
        __extends(RegisteInfo, _super);
        function RegisteInfo(props) {
            _super.call(this, props);
            this.props.flow.sView(this);
        }
        RegisteInfo.prototype.render = function () {
            var _this = this;
            return React.createElement("div", {className: 'wrap'}, React.createElement("div", {className: 'title'}, "步骤三：节点注册信息"), this.props.config['type'] == 'master' ?
                React.createElement("div", {className: 'desc nodeDesc'}, "本节点设置为主库节点，连接到本节点的从库节点将使用此URL进行节点注册") :
                React.createElement("div", {className: 'desc nodeDesc'}, "本节点设置为从库节点，请填写主库节点的注册接口URL"), React.createElement("div", {className: 'formWrap'}, this.props.config['type'] == 'master' ?
                React.createElement("div", {className: 'row'}, React.createElement("div", {className: 'title'}, "下面的链接是注册接口URL，请设置到进行数据同步的从库节点中。"), React.createElement("div", {className: 'title important'}, this.props.flow.genSyncURL())) :
                React.createElement("div", {className: 'row'}, React.createElement("div", {className: 'title'}, "请填写主库节点发布的注册接口URL"), React.createElement("div", {className: 'input'}, React.createElement("input", {type: 'text', className: 'text url', value: this.props.config["registration.url"], onChange: function (ev) { _this.saveURL(ev.target.value); }})))));
        };
        RegisteInfo.prototype.saveURL = function (val) {
            this.props.flow.save(val);
            this.forceUpdate();
        };
        return RegisteInfo;
    }(View.View));
    View.RegisteInfo = RegisteInfo;
})(View || (View = {}));
/**
 * 配置向导-设置用户向导主视图。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      View/ConfigUser.ts
 */
/// <reference path="../View.ts" />
var View;
(function (View) {
    var ConfigUser = (function (_super) {
        __extends(ConfigUser, _super);
        function ConfigUser(props) {
            _super.call(this, props);
            this.props.flow.sView(this);
        }
        ConfigUser.prototype.render = function () {
            return React.createElement("div", {className: 'wrap'}, React.createElement("div", {className: 'title'}, "步骤四：注册登录用户"), React.createElement("div", {className: 'desc'}, "注册一个用户登录到本系统"), React.createElement("div", {className: 'formWrap'}, React.createElement("div", {className: 'row'}, React.createElement("div", {className: 'title'}, "用户名"), React.createElement("div", {className: 'input'}, React.createElement("input", {type: 'text', className: 'userName'}))), React.createElement("div", {className: 'row'}, React.createElement("div", {className: 'title'}, "密码"), React.createElement("div", {className: 'input'}, React.createElement("input", {type: 'password', className: 'userPsw'})))));
        };
        return ConfigUser;
    }(View.View));
    View.ConfigUser = ConfigUser;
})(View || (View = {}));
/**
 * 配置向导-完成向导主视图。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      View/Finish.ts
 */
/// <reference path="../View.ts" />
var View;
(function (View) {
    var Finish = (function (_super) {
        __extends(Finish, _super);
        function Finish(props) {
            _super.call(this, props);
            this.props.flow.sView(this);
        }
        Finish.prototype.render = function () {
            return React.createElement("div", {className: 'wrap'}, React.createElement("div", {className: 'title'}, "步骤五：完成"), React.createElement("div", {className: 'desc finishDesc'}, "恭喜您，配置完成，请点击完成按钮跳转到同步工具首页。"));
        };
        return Finish;
    }(View.View));
    View.Finish = Finish;
})(View || (View = {}));
/**
 * 配置向导引导主视图。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      View/Stage.ts
 */
/// <reference path="View.ts" />
/// <reference path="_Steps/NodeChoice.tsx" />
/// <reference path="_Steps/ConfigDB.tsx" />
/// <reference path="_Steps/RegisteInfo.tsx" />
/// <reference path="_Steps/ConfigUser.tsx" />
/// <reference path="_Steps/Finish.tsx" />
var View;
(function (View) {
    var Stage = (function (_super) {
        __extends(Stage, _super);
        function Stage(props) {
            _super.call(this, props);
            /**
             * 弹出框配置
             */
            this.alertConf = {
                cancel: false,
                title: '提示',
                okValue: '确定',
                ok: function () {
                    //
                }
            };
            /**
             * 提示框配置
             */
            this.promptConf = {
                cancel: false
            };
            this.props.flow.sView(this);
            var flow = this.props.flow;
            this.stepViews = [
                React.createElement(View.NodeChoice, {flow: flow.make('nodeChoice'), config: flow.gConfig()}),
                React.createElement(View.ConfigDB, {flow: flow.make('configDB'), parentFlow: flow, config: flow.gConfig()}),
                React.createElement(View.RegisteInfo, {flow: flow.make('registeInfo'), config: flow.gConfig()}),
                // <ConfigUser flow={flow.make('configUser')} config={flow.gConfig()}/>,
                // <ConfigUser flow={flow.make('configUser')} config={flow.gConfig()}/>,
                React.createElement(View.Finish, {flow: flow.make('finish'), parentFlow: flow, config: flow.gConfig()})
            ];
        }
        Stage.prototype.render = function () {
            var _this = this;
            var flow = this.props.flow;
            var previousStyle = 'btn stageBtn' + (flow.gStepIndex() <= 0 ? ' disabled' : '');
            return React.createElement("div", {className: 'stage'}, React.createElement("div", {className: 'phase top'}, React.createElement("span", {className: 'title'}, "同步工具配置向导")), React.createElement("div", {className: 'phase stageWrap'}, this.stepViews[flow.gStepIndex()]), React.createElement("div", {className: 'phase bottom'}, flow.gStepIndex() == 1 ?
                React.createElement("span", {className: 'left btnWrap'}, React.createElement("span", {className: 'btn stageBtn', onClick: function () { _this.testConn(); }}, React.createElement("p", null, "测试连接"))) :
                '', React.createElement("span", {className: 'right btnWrap'}, React.createElement("span", {className: previousStyle, onClick: function (ev) { flow.previous(ev); }}, React.createElement("p", null, "上一步")), flow.gStepIndex() >= this.stepViews.length - 1 ?
                React.createElement("span", {className: 'btn stageBtn', onClick: function (ev) { flow.make("finish").finish(); }}, React.createElement("p", null, "完成")) :
                React.createElement("span", {className: 'btn stageBtn', onClick: function (ev) { flow.next(ev); }}, React.createElement("p", null, "下一步")))));
        };
        /**
         * 测试数据库连接
         */
        Stage.prototype.testConn = function () {
            var alertDialog = dialog(this.alertConf);
            var dbType = this.props.flow.gConfig()['db.type'];
            var dbDriver = this.props.flow.gConfig()['db.driver'];
            var dbUrl = this.props.flow.gConfig()['db.url'];
            var dbUser = this.props.flow.gConfig()['db.user'];
            var dbPsw = this.props.flow.gConfig()['db.psw'];
            if (!dbType || !dbDriver || !dbUrl || !dbUser || !dbPsw) {
                alertDialog.content("<span class='alert'><span class='icon icon-notification'></span><span class='title'>请完成数据库配置</span>");
                alertDialog.showModal();
                return;
            }
            var prompt = dialog(this.promptConf);
            prompt.content("正在测试数据库连接，请稍候。");
            prompt.showModal();
            this.props.flow.connTest().then(function (isSuc) {
                prompt.close();
                if (!isSuc) {
                    alertDialog.content("<span class='alert'><span class='icon icon-notification'></span><span class='title'>连接失败</span>");
                }
                else {
                    alertDialog.content("<span class='alert'><span class='icon icon-notification'></span><span class='title'>连接成功</span>");
                }
                alertDialog.showModal();
            });
        };
        return Stage;
    }(View.View));
    View.Stage = Stage;
})(View || (View = {}));
/**
 * 定义编辑器异常。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      E.ts
 */
var E = (function (_super) {
    __extends(E, _super);
    /**
     * 构造函数。
     */
    function E(message) {
        _super.call(this);
        if ('captureStackTrace' in Error)
            Error['captureStackTrace'](this, E);
        this.name = 'Error';
        this.message = message;
    }
    E.UTIL_REMOTE_TIMEOUT = '远端请求超时';
    return E;
}(Error));
/**
 * 声明成功回调函数接口规范。
 *
 * @author    姚尧 <yaogaoyu@163.com>
 * @license   GPL-3.0
 * @file      Util/ISuccessCallback.ts
 */
/// <reference path="IHashTable.ts" />
/**
 * 声明失败回调函数接口规范。
 *
 * @author    姚尧 <yaogaoyu@163.com>
 * @copyright © 2015 Dahao.de
 * @license   GPL-3.0
 * @file      Util/IFailureCallback.ts
 */
/**
 * 定义远端通信组件。
 *
 * @author    姚尧 <yaogaoyu@163.com>
 * @license   GPL-3.0
 * @file      Util/Remote.ts
 */
/// <reference path="../E.ts" />
/// <reference path="ISuccessCallback.ts" />
/// <reference path="IFailureCallback.ts" />
/// <reference path="_iterator.ts" />
var Util;
(function (Util) {
    var xdrs = [];
    var Remote;
    (function (Remote) {
        /**
         * 格式化。
         */
        function format(url) {
            return location.protocol + url.replace(/^.+\/\//, '//').replace(/\?.*$/, '');
        }
        Remote.format = format;
        /**
         * HTTP GET 远端数据。
         */
        function get(url, onSuccess, onFailure) {
            http(Method.GET, url, {}, onSuccess, onFailure);
        }
        Remote.get = get;
        /**
         * HTTP POST 远端数据。
         */
        function post(url, data, onSuccess, onFailure) {
            http(Method.POST, url, data, onSuccess, onFailure);
        }
        Remote.post = post;
        /**
         * HTTP 请求方法。
         */
        (function (Method) {
            Method[Method["GET"] = 0] = "GET";
            Method[Method["POST"] = 1] = "POST";
        })(Remote.Method || (Remote.Method = {}));
        var Method = Remote.Method;
        ;
        /**
         * HTTP 请求远端数据。
         */
        function http(method, url, data, onSuccess, onFailure) {
            var qs = [], xhr;
            if ('undefined' != typeof XDomainRequest) {
                xhr = new XDomainRequest();
                xdrs.push(xhr);
            }
            else
                xhr = new XMLHttpRequest();
            xhr.onload = function () {
                try {
                    var resp = JSON.parse(xhr.responseText);
                    if ('reason' in resp)
                        throw new E(resp['reason']);
                    if ('status' in xhr && 200 != xhr.status)
                        throw new E(xhr.statusText);
                    onSuccess(resp);
                }
                catch (error) {
                    if ('context' in resp)
                        error["context"] = resp["context"];
                    onFailure(error, xhr.status);
                }
            };
            xhr.onprogress = function () {
                //
            };
            xhr.onerror = function (event) {
                onFailure(event.error);
            };
            xhr.ontimeout = function () {
                onFailure(new E(E.UTIL_REMOTE_TIMEOUT));
            };
            // xhr.timeout = 30000;
            xhr.open(Method.GET == method ? 'GET' : 'POST', format(url), true);
            Util.each(data, function (value, key) {
                qs.push(key + '=' + encodeURIComponent(value));
            });
            if (qs.length && 'setRequestHeader' in xhr)
                xhr['setRequestHeader']('Content-Type', 'application/x-www-form-urlencoded');
            xhr.send(qs.length ? qs.join('&') : null);
        }
        Remote.http = http;
    })(Remote = Util.Remote || (Util.Remote = {}));
})(Util || (Util = {}));
/**
 * 声明引导程序业务流接口规范。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Core/_Runtime/IStageFlow.ts
 */
/// <reference path="IFlow.ts" />
/// <reference path="../_View/IView.ts" />
/// <reference path="../../Util/Remote.ts" />
/**
 * 声明配置完成完成业务流接口规范。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Core/_Runtime/IFinishFlow.ts
 */
/// <reference path="IFlow.ts" />
/// <reference path="../_View/IView.ts" />
/**
 * 声明节点类型选择业务流接口规范。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Core/_Runtime/INodeChoiceFlow.ts
 */
/// <reference path="IStepFlow.ts" />
/// <reference path="../_View/IView.ts" />
/**
 * 节点类型选择实体。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Runtime/NodeChoiceFlow.ts
 */
/// <reference path="../Flow.ts" />
/// <reference path="../../Core/_Runtime/INodeChoiceFlow.ts" />
var Runtime;
(function (Runtime) {
    var NodeChoiceFlow = (function (_super) {
        __extends(NodeChoiceFlow, _super);
        /**
         * 构造函数。
         */
        function NodeChoiceFlow(config) {
            _super.call(this);
            this.alertConf = {
                cancel: false,
                title: '提示',
                okValue: '确定',
                ok: function () {
                    //
                }
            };
            this.config = config;
        }
        /**
         * 节点类型选择业务
         */
        NodeChoiceFlow.prototype.choiceType = function (type) {
            this.config['type'] = type;
        };
        /**
         * 步骤验证
         */
        NodeChoiceFlow.prototype.validate = function () {
            if (!this.config['type']) {
                var alertDialog = dialog(this.alertConf);
                alertDialog.content("<span class='alert'><span class='icon icon-notification'></span><span class='title'>请选择一个节点类型。</span>");
                alertDialog.showModal();
                return false;
            }
            return true;
        };
        return NodeChoiceFlow;
    }(Runtime.Flow));
    Runtime.NodeChoiceFlow = NodeChoiceFlow;
})(Runtime || (Runtime = {}));
/**
 * 声明数据库配置业务流接口规范。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Core/_Runtime/IConfigDBFlow.ts
 */
/// <reference path="IStepFlow.ts" />
/// <reference path="../_View/IView.ts" />
/**
 * 定义（运行时）事件组件。
 *
 * @author    郑煜宇 <yzheng@atfacg.com>
 * @copyright © 2015 Dahao.de
 * @license   GPL-3.0
 * @file      Ev/Event.ts
 */
/// <reference path="../Core/_Ev/IEvent.ts" />
/// <reference path="../Core/_Runtime/IFlow.ts" />
var Ev;
(function (Ev) {
    var Event = (function () {
        /**
         * 构造函数。
         */
        function Event(metas) {
            this.target = metas.target;
        }
        /**
         * 获取类型。
         */
        Event.prototype.gType = function () {
            return '';
        };
        return Event;
    }());
    Ev.Event = Event;
})(Ev || (Ev = {}));
/**
 * 声明（运行时）画面事件接口规范。
 *
 * @author    姚尧 <yyao@atfacg.com>
 * @copyright © 2015 Dahao.de
 * @license   GPL-3.0
 * @file      Ev/IControlMetas.ts
 */
/// <reference path="../Core/_Ev/IEventMetas.ts" />
/// <reference path="../Core/_Runtime/IStageFlow.ts" />
/**
 * 定义（运行时）画面出现选择信息事件组件。
 *
 * @author    姚尧 <yyao@atfacg.com>
 * @copyright © 2015 Dahao.de
 * @license   GPL-3.0
 * @file      Ev/Choice.ts
 */
/// <reference path="Event.ts" />
/// <reference path="IStepMetas.ts" />
var Ev;
(function (Ev) {
    var Step = (function (_super) {
        __extends(Step, _super);
        /**
         * 构造函数。
         */
        function Step(metas) {
            _super.call(this, metas);
            this.type = metas.type;
            this.callback = metas.callback;
        }
        /**
         * 获取类型。
         */
        Step.prototype.gType = function () {
            return 'step';
        };
        return Step;
    }(Ev.Event));
    Ev.Step = Step;
})(Ev || (Ev = {}));
/**
 * 数据库配置实体。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Runtime/ConfigDBFlow.ts
 */
/// <reference path="../Flow.ts" />
/// <reference path="../../Core/_Runtime/IConfigDBFlow.ts" />
/// <reference path="../../Ev/Step.ts" />
var Runtime;
(function (Runtime) {
    var ConfigDBFlow = (function (_super) {
        __extends(ConfigDBFlow, _super);
        /**
         * 构造函数。
         */
        function ConfigDBFlow(config) {
            _super.call(this);
            this.databases = {
                'Oracle': { 'driver': 'oracle.jdbc.driver.OracleDriver', 'url': 'jdbc:oracle:thin:@127.0.0.1:1521:databasename' },
                'SQL Server': { 'driver': 'net.sourceforge.jtds.jdbc.Driver', 'url': 'jdbc:jtds:sqlserver://hostname/databasename;useCursors=true;bufferMaxMemory=10240;lobBuffer=5242880;socketTimeout=300;appName=syncdb' },
                'DB2': { 'driver': 'com.ibm.db2.jcc.DB2Driver', 'url': 'jdbc:db2://hostname:50000/databasename' },
                'Mysql': { 'driver': 'com.mysql.jdbc.Driver', 'url': 'jdbc:mysql://hostname/databasename?tinyInt1isBit=false&zeroDateTimeBehavior=convertToNull' }
            };
            /**
             * 弹出框配置
             */
            this.alertConf = {
                cancel: false,
                title: '提示',
                okValue: '确定',
                ok: function () {
                    //
                }
            };
            /**
             * 提示框配置
             */
            this.promptConf = {
                cancel: false
            };
            this.wizConfig = config;
        }
        /**
         * 步骤验证
         */
        ConfigDBFlow.prototype.validate = function () {
            var _this = this;
            this.testConn(function (isTestSuc) {
                if (isTestSuc) {
                    _this.view.props.parentFlow.dispatchEvent(new Ev.Step({
                        target: _this.view.props.parentFlow,
                        type: "db.next"
                    }));
                }
            });
            return false;
        };
        ConfigDBFlow.prototype.getDatabases = function () {
            return this.databases;
        };
        /**
         * 测试数据库连接
         */
        ConfigDBFlow.prototype.testConn = function (cb) {
            var alertDialog = dialog(this.alertConf);
            var dbType = this.wizConfig['db.type'];
            var dbDriver = this.wizConfig['db.driver'];
            var dbUrl = this.wizConfig['db.url'];
            var dbUser = this.wizConfig['db.user'];
            var dbPsw = this.wizConfig['db.psw'];
            if (!dbType || !dbDriver || !dbUrl || !dbUser || !dbPsw) {
                alertDialog.content("<span class='alert'><span class='icon icon-notification'></span><span class='title'>请完成数据库配置</span>");
                alertDialog.showModal();
                cb(false);
            }
            var prompt = dialog(this.promptConf);
            prompt.content("正在测试数据库连接，请稍候。");
            prompt.showModal();
            this.view.props.parentFlow.connTest().then(function (isSuc) {
                prompt.close();
                if (!isSuc) {
                    alertDialog.content("<span class='alert'><span class='icon icon-notification'></span><span class='title'>连接失败</span>");
                    alertDialog.showModal();
                }
                cb(isSuc);
            });
        };
        return ConfigDBFlow;
    }(Runtime.Flow));
    Runtime.ConfigDBFlow = ConfigDBFlow;
})(Runtime || (Runtime = {}));
/**
 * 声明节点注册业务流接口规范。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Core/_Runtime/IRegisteInfoFlow.ts
 */
/// <reference path="IStepFlow.ts" />
/// <reference path="../_View/IView.ts" />
/**
 * 节点注册信息实体。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Runtime/RegisteInfoFlow.ts
 */
/// <reference path="../Flow.ts" />
/// <reference path="../../Core/_Runtime/IRegisteInfoFlow.ts" />
/// <reference path="../StageFlow.tsx" />
var Runtime;
(function (Runtime) {
    var RegisteInfoFlow = (function (_super) {
        __extends(RegisteInfoFlow, _super);
        /**
         * 构造函数。
         */
        function RegisteInfoFlow(config) {
            _super.call(this);
            /**
             * 弹出框配置
             */
            this.alertConf = {
                cancel: false,
                title: '提示',
                okValue: '确定',
                ok: function () {
                    //
                }
            };
            this.wizConfig = config;
        }
        /**
         * 保存从库设置的同步接口URL
         */
        RegisteInfoFlow.prototype.save = function (url) {
            this.wizConfig['registration.url'] = url;
        };
        /**
         * 生成主端的同步接口URL
         */
        RegisteInfoFlow.prototype.genSyncURL = function () {
            var contextPath = document.querySelector("#p").getAttribute("ref");
            var local = window.location;
            return local.protocol + "://" + local.host + contextPath + "/sync/" + Runtime.StageFlow.ENGINE_NAME;
        };
        /**
         * 步骤验证
         */
        RegisteInfoFlow.prototype.validate = function () {
            if (this.wizConfig['type'] == 'master')
                return true;
            if (!this.wizConfig['registration.url'] || /(^\s+)|(\s+$)/ig.test(this.wizConfig['registration.url'])) {
                var alert_1 = dialog(this.alertConf);
                // <span class='alert'><span class='icon icon-notification'></span><span class='title'>连接失败</span>
                alert_1.content("<span class='alert'><span class='icon icon-notification'></span><span class='title'>主库节点URL填写不正确，请检查所填写的内容。</span>");
                alert_1.showModal();
                return false;
            }
            else {
                return true;
            }
        };
        return RegisteInfoFlow;
    }(Runtime.Flow));
    Runtime.RegisteInfoFlow = RegisteInfoFlow;
})(Runtime || (Runtime = {}));
/**
 * 声明保存登录用户业务流接口规范。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Core/_Runtime/IConfigUserFlow.ts
 */
/// <reference path="IStepFlow.ts" />
/// <reference path="../_View/IView.ts" />
/**
 * 生成用户业务流。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Runtime/ConfigUserFlow.ts
 */
/// <reference path="../Flow.ts" />
/// <reference path="../../Core/_Runtime/IConfigUserFlow.ts" />
var Runtime;
(function (Runtime) {
    var ConfigUserFlow = (function (_super) {
        __extends(ConfigUserFlow, _super);
        /**
         * 构造函数。
         */
        function ConfigUserFlow(config) {
            _super.call(this);
        }
        /**
         * 生成用户
         */
        ConfigUserFlow.prototype.genUser = function () {
            //
        };
        /**
         * 步骤验证
         */
        ConfigUserFlow.prototype.validate = function () {
            return true;
        };
        return ConfigUserFlow;
    }(Runtime.Flow));
    Runtime.ConfigUserFlow = ConfigUserFlow;
})(Runtime || (Runtime = {}));
/**
 * 声明配置完成完成业务流接口规范。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Core/_Runtime/IFinishFlow.ts
 */
/// <reference path="IStepFlow.ts" />
/// <reference path="../_View/IView.ts" />
/**
 * 配置完成实体。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Runtime/FinishFlow.ts
 */
/// <reference path="../Flow.ts" />
/// <reference path="../../Core/_Runtime/IFinishFlow.ts" />
var Runtime;
(function (Runtime) {
    var FinishFlow = (function (_super) {
        __extends(FinishFlow, _super);
        /**
         * 构造函数。
         */
        function FinishFlow(config) {
            _super.call(this);
            /**
             * 项目上下文
             */
            this.contextPath = document.querySelector("#p").getAttribute("ref");
            /**
             * 弹出框配置
             */
            this.alertConf = {
                cancel: false,
                title: '提示',
                okValue: '确定',
                ok: function () {
                    //
                }
            };
            /**
             * 提示框配置
             */
            this.promptConf = {
                cancel: false
            };
            this.wizConfig = config;
        }
        /**
         * 处理配置完成业务
         */
        FinishFlow.prototype.finish = function () {
            var _this = this;
            // let alert: any = dialog(this.alertConf);
            var prompt = dialog(this.promptConf);
            prompt.content("<span class='col loading'>请稍候，正在生成同步工具系统设置。</span><img class='col loading' src='" + this.contextPath + "/s/images/loading.gif'>");
            prompt.showModal();
            Util.Remote.post(this.contextPath + "/wizard/save", this.wizConfig, function (data) {
                var isWizSuc = data['code'] != "0";
                prompt.close();
                if (isWizSuc) {
                    var alertDialog_1;
                    _this.alertConf['ok'] = function () {
                        if (alertDialog_1)
                            alertDialog_1.close();
                        _this.view.props.parentFlow.dispatchEvent(new Ev.Step({
                            target: _this.view.props.parentFlow,
                            type: "finish"
                        }));
                    };
                    alertDialog_1 = dialog(_this.alertConf);
                    alertDialog_1.content("<span class='alert'><span class='icon icon-checkmark'></span><span class='title'>配置成功。</span>");
                    alertDialog_1.showModal();
                }
            }, null);
        };
        /**
         * 步骤验证
         */
        FinishFlow.prototype.validate = function () {
            return true;
        };
        return FinishFlow;
    }(Runtime.Flow));
    Runtime.FinishFlow = FinishFlow;
})(Runtime || (Runtime = {}));
/**
 * 向导业务流实体。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Runtime/Stage.ts
 */
/// <reference path="Flow.ts" />
/// <reference path="../View/Stage.tsx" />
/// <reference path="../Core/_Runtime/IStageFlow.ts" />
/// <reference path="_Steps/NodeChoiceFlow.ts" />
/// <reference path="_Steps/ConfigDBFlow.ts" />
/// <reference path="_Steps/RegisteInfoFlow.ts" />
/// <reference path="_Steps/ConfigUserFlow.ts" />
/// <reference path="_Steps/FinishFlow.ts" />
/// <reference path="../Ev/Step.ts" />
var Runtime;
(function (Runtime) {
    var StageFlow = (function (_super) {
        __extends(StageFlow, _super);
        /**
         * 构造函数。
         */
        function StageFlow(container) {
            var _this = this;
            _super.call(this);
            /**
             * type 节点类型
             * db.driver
             * db.url
             * db.user
             * db.psw
             * registration.url
             * sync.url
             * user
             * psw
             */
            this.configDatas = {};
            /**
             * 子视图对应业务流实体哈希表
             */
            this.subViewFlowHash = {};
            /**
             * 当前所在步骤的索引号
             */
            this.stepIndex = 0;
            /**
             * 步骤顺序
             * "nodeChoice", "configDB", "registeInfo", "configUser", "finish"
             */
            this.stepOrder = ["nodeChoice", "configDB", "registeInfo", "finish"];
            /**
             * 项目上下文
             */
            this.contextPath = document.querySelector("#p").getAttribute("ref");
            this.view = React.render(React.createElement(View.Stage, {flow: this}), container);
            this.addEventListener("step", function (ev) {
                if (ev.type == "db.next") {
                    _this.configDBNext();
                }
                else if (ev.type == "finish") {
                    _this.finish();
                }
            });
        }
        /**
         * 取得配置数据。
         */
        StageFlow.prototype.gConfig = function () {
            return this.configDatas;
        };
        /**
         * 绑定子视图与Flow。
         */
        StageFlow.prototype.make = function (type) {
            if (this.subViewFlowHash && type in this.subViewFlowHash)
                return this.subViewFlowHash[type];
            var flow;
            switch (type) {
                case 'nodeChoice':
                    flow = new Runtime.NodeChoiceFlow(this.configDatas);
                    break;
                case 'configDB':
                    flow = new Runtime.ConfigDBFlow(this.configDatas);
                    break;
                case 'registeInfo':
                    flow = new Runtime.RegisteInfoFlow(this.configDatas);
                    break;
                case 'configUser':
                    flow = new Runtime.ConfigUserFlow(this.configDatas);
                    break;
                case 'finish':
                    flow = new Runtime.FinishFlow(this.configDatas);
                    break;
            }
            this.subViewFlowHash[type] = flow;
            return flow;
        };
        /**
         * 取得当前步骤索引号。
         * 索引号从0开始
         */
        StageFlow.prototype.gStepIndex = function () {
            return this.stepIndex;
        };
        /**
         * 设置当前步骤索引号。
         * 索引号从0开始
         */
        StageFlow.prototype.sStepIndex = function (index) {
            if (index < 0)
                this.stepIndex = 0;
        };
        /**
         * 上一步。
         */
        StageFlow.prototype.previous = function (ev) {
            if (this.stepIndex <= 0)
                return;
            this.stepIndex -= 1;
            this.view.forceUpdate();
        };
        /**
         * 下一步。
         */
        StageFlow.prototype.next = function (ev) {
            var stepFlow = this.make(this.stepOrder[this.stepIndex]);
            if (this.stepIndex == 1) {
                stepFlow.validate();
                return;
            }
            if (this.stepIndex < this.stepOrder.length - 1 && stepFlow.validate()) {
                this.stepIndex += 1;
            }
            this.view.forceUpdate();
        };
        /**
         * 完成。
         */
        StageFlow.prototype.finish = function () {
            window.location.href = Util.Path.gOrigin();
        };
        /**
         * 测试数据库连接
         */
        StageFlow.prototype.connTest = function () {
            var _this = this;
            var dbType = this.configDatas['db.type'];
            var dbDriver = this.configDatas['db.driver'];
            var dbUrl = this.configDatas['db.url'];
            var dbUser = this.configDatas['db.user'];
            var dbPsw = this.configDatas['db.psw'];
            if (!dbType || !dbDriver || !dbUrl || !dbUser || !dbPsw) {
                return new Promise(function (resolve) {
                    resolve(false);
                });
            }
            var testData = {
                type: dbType || '',
                driver: dbDriver || '',
                url: dbUrl || '',
                u: dbUser || '',
                p: dbPsw || ''
            };
            return new Promise(function (resolve) {
                Util.Remote.post(_this.contextPath + "/wizard/testConn", testData, function (data) {
                    resolve(data["code"] == "1");
                }, null);
            });
        };
        /**
         * 数据库配置的下一步由数据库配置业务自己调用
         */
        StageFlow.prototype.configDBNext = function () {
            this.stepIndex += 1;
            this.view.forceUpdate();
        };
        /**
         * 引擎名
         */
        StageFlow.ENGINE_NAME = "dbtool";
        return StageFlow;
    }(Runtime.Flow));
    Runtime.StageFlow = StageFlow;
})(Runtime || (Runtime = {}));
/**
 * 向导运行时实体。
 *
 * @author    姚尧 <yaogaoyu@qq.com>
 * @file      Runtime/Runtime.ts
 */
/// <reference path="StageFlow.tsx" />
var Runtime;
(function (Runtime_1) {
    var Runtime = (function () {
        /**
         * 构造函数。
         */
        function Runtime() {
            var container = document.querySelector('.wizard');
            this.stage = new Runtime_1.StageFlow(container);
        }
        return Runtime;
    }());
    Runtime_1.Runtime = Runtime;
})(Runtime || (Runtime = {}));
/**
 * 同步工具配置向导入口类。
 *
 * @author    姚尧 <yaogaoyu@163.com>
 * @file      Wizard.ts
 */
/// <reference path="Runtime/Runtime.ts" />
var Wizard = (function () {
    /**
     * 构造函数。
     */
    function Wizard() {
        this.runtime = new Runtime.Runtime();
    }
    Wizard.version = "0.1.0";
    return Wizard;
}());
module.exports=Wizard;


},{}]},{},[])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
